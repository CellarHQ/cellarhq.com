apply plugin: 'findbugs'

findbugs {
    toolVersion = '2.0.3'
}

findbugsMain {
    classes = project.fileTree(sourceSets.main.output.classesDir) {
        builtBy sourceSets.main.output
    }.matching {
        exclude '**/apidocs/**'
        exclude '**/*.html'
        exclude '**/*.properties'
    }
    source = sourceSets.main.allSource.filter {
        exclude '**/apidocs/**'
        exclude '**/*.html'
        exclude '**/*.properties'
    }
}
findbugsTest {
    source = sourceSets.test.allSource
    enabled = false
}
tasks.withType(FindBugs) {
    maxHeapSize = '256m'
    excludeFilter = new File("${rootDir}/findbugs/excludeFilter.xml")
    reports {
        if (project.hasProperty('findbugs.reportFormat') && project.getProperty('findbugs.reportFormat') == 'xml') {
            xml.enabled = true
            html.enabled = false
        } else {
            xml.enabled = false
            html.enabled = true
        }
    }
}

// Configure the findbugs tasks to capture standard output to the QUIET log level
project.afterEvaluate {
    project.tasks.withType(FindBugs) {
        it.logging.captureStandardOutput(LogLevel.QUIET)
    }
}
