buildscript {
  repositories {
    jcenter()
  }
}

plugins {
  id "io.ratpack.ratpack-groovy" version "1.7.6"
  id "idea"
  //id 'codenarc'
}

repositories {
  jcenter()
  mavenCentral()
  maven {
    url "http://repository.openmindonline.it/"
    allowInsecureProtocol = true
  }
}

//codenarc {
//  toolVersion = 1.4
//  configFile = new File("${project.rootDir}/config/codenarc/codenarc.groovy")
//}
//codenarcTest.enabled = false
//codenarcFunctional.enabled = false

java {
  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11
}

sourceSets {
  functional {
    compileClasspath += main.output + test.output
    runtimeClasspath += main.output + test.output
  }
}

configurations {
  functionalCompile.extendsFrom configurations.testCompile
  functionalRuntime.extendsFrom configurations.testRuntime
}

idea {
  module {
    testSourceDirs += sourceSets.functional.groovy.srcDirs
    testSourceDirs += sourceSets.functional.resources.srcDirs
    scopes.TEST.plus.add(configurations.functionalCompile)
    scopes.TEST.plus.add(configurations.functionalRuntime)
  }
}

dependencies {
  implementation project(':model')

  implementation ratpack.dependency('h2')
  implementation ratpack.dependency('hikari')
  implementation ratpack.dependency('handlebars')
  implementation ratpack.dependency('pac4j')
  implementation ratpack.dependency('remote')
  implementation ratpack.dependency('session')
  implementation 'org.pac4j:pac4j-http:1.8.5'
  implementation 'org.pac4j:pac4j-oauth:1.8.5'

  implementation 'org.mindrot:jbcrypt:0.4'
  implementation 'com.github.slugify:slugify:2.4'

  implementation group: 'com.google.inject', name: 'guice', version: '4.2.2'

  implementation 'org.glassfish:javax.el:3.0.1-b11'
  implementation 'org.hibernate:hibernate-validator:6.1.1.Final'
  implementation 'com.amazonaws:aws-java-sdk:1.11.714'
  implementation 'org.apache.httpcomponents:httpclient:4.5.11'

  implementation group: 'org.jfrog.jade.plugins', name: 'jade-plugin-parent', version: '1.4-alpha1', ext: 'pom'
  implementation 'org.reflections:reflections-maven:0.9.9-RC2'
  implementation 'org.imgscalr:imgscalr-lib:4.2'
  implementation 'org.owasp.antisamy:antisamy:1.5.8'

  implementation 'com.newrelic.logging:logback:1.0-rc3'

  testImplementation "org.spockframework:spock-core:2.0-M1-groovy-2.5"
  testImplementation 'cglib:cglib-nodep:3.3.0'
  testRuntimeOnly "org.objenesis:objenesis:3.1"
  testImplementation ratpack.dependency("remote-test")

  functionalImplementation "org.gebish:geb-spock:3.3"
  functionalImplementation "org.seleniumhq.selenium:selenium-firefox-driver:3.141.59"
  functionalImplementation 'org.liquibase:liquibase-core:3.8.5'
}

//task functionalTest(type: Test) {
//  testClassesDir = sourceSets.functional.output.classesDir
//  classpath = sourceSets.functional.runtimeClasspath
//
//  systemProperty 'liquibase.changelog', rootProject.file('model/migrations/migrations.xml').canonicalPath
//  systemProperty 'liquibase.schema.default', 'public'
//  systemProperty 'liquibase.onerror.fail', true
//  maxHeapSize '768m'
//
//  if (System.getenv('SNAP_CI')) {
//    environment 'RATPACK_DB__SERVER_NAME', System.getenv('SNAP_DB_PG_HOST')
//    environment 'RATPACK_DB__PORT_NUMBER', System.getenv('SNAP_DB_PG_PORT')
//    environment 'RATPACK_DB__NAME', 'app_test'
//    environment 'RATPACK_DB__USER', System.getenv('SNAP_DB_PG_USER')
//    environment 'RATPACK_DB__PASSWORD', System.getenv('SNAP_DB_PG_PASSWORD')
//    environment 'RATPACK_CELLARHQ__AWS_ACCESS_KEY', System.getenv('AWS_ACCESS_KEY') ?: 'BAD_KEY'
//    environment 'RATPACK_CELLARHQ__AWS_SECRET_KEY', System.getenv('AWS_SECRET_KEY') ?: 'BAD_KEY'
//    environment 'RATPACK_CELLARHQ__TWITER_API_KEY', System.getenv('TWITTER_API_TOKEN') ?: 'BAD_KEY'
//    environment 'RATPACK_CELLARHQ__TWITTER_API_SECRET', System.getenv('TWITTER_API_SECRET') ?: 'BAD_KEY'
//
//    testLogging.showStandardStreams = true
//  } else {
//    environment 'RATPACK_DB__DATA_SOURCE_PROPERTIES__DATABASE_NAME', 'cellarhq_testing'
//    if (project.hasProperty('awsAccessKey')) {
//      environment 'RATPACK_CELLARHQ__AWS_ACCESS_KEY', project.awsAccessKey
//      environment 'RATPACK_CELLARHQ__AWS_SECRET_KEY', project.awsSecretKey
//      environment 'RATPACK_CELLARHQ__TWITER_API_KEY', project.twitterApiKey
//      environment 'RATPACK_CELLARHQ__TWITTER_API_SECRET', project.twitterApiSecret
//    }
//  }
//}

run {
  if (project.hasProperty('awsAccessKey')) {
    environment 'RATPACK_CELLARHQ__AWS_ACCESS_KEY', project.awsAccessKey
    environment 'RATPACK_CELLARHQ__AWS_SECRET_KEY', project.awsSecretKey
    environment 'RATPACK_CELLARHQ__TWITTER_API_KEY', project.twitterApiKey
    environment 'RATPACK_CELLARHQ__TWITTER_API_SECRET', project.twitterApiSecret
  }
}


