/*
 * This file is generated by jOOQ.
 */
package com.cellarhq.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.processing.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "account_oauth", schema = "public", uniqueConstraints = {
    @UniqueConstraint(name = "account_oauth_pkey", columnNames = {"id"}),
    @UniqueConstraint(name = "account_oauth_client_username_key", columnNames = {"client", "username"})
}, indexes = {
    @Index(name = "account_oauth_client_username_key", unique = true, columnList = "client ASC, username ASC"),
    @Index(name = "account_oauth_pkey", unique = true, columnList = "id ASC")
})
public class AccountOauth implements Serializable {

    private static final long serialVersionUID = -1829548455;

    private Long          id;
    private Integer       version;
    private Long          cellarId;
    private String        client;
    private String        username;
    private LocalDateTime createdDate;
    private LocalDateTime modifiedDate;

    public AccountOauth() {}

    public AccountOauth(AccountOauth value) {
        this.id = value.id;
        this.version = value.version;
        this.cellarId = value.cellarId;
        this.client = value.client;
        this.username = value.username;
        this.createdDate = value.createdDate;
        this.modifiedDate = value.modifiedDate;
    }

    public AccountOauth(
        Long          id,
        Integer       version,
        Long          cellarId,
        String        client,
        String        username,
        LocalDateTime createdDate,
        LocalDateTime modifiedDate
    ) {
        this.id = id;
        this.version = version;
        this.cellarId = cellarId;
        this.client = client;
        this.username = username;
        this.createdDate = createdDate;
        this.modifiedDate = modifiedDate;
    }

    @Id
    @Column(name = "id", nullable = false, precision = 64)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Column(name = "version", nullable = false, precision = 32)
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @Column(name = "cellar_id", nullable = false, precision = 64)
    public Long getCellarId() {
        return this.cellarId;
    }

    public void setCellarId(Long cellarId) {
        this.cellarId = cellarId;
    }

    @Column(name = "client", nullable = false, length = 20)
    public String getClient() {
        return this.client;
    }

    public void setClient(String client) {
        this.client = client;
    }

    @Column(name = "username", nullable = false, length = 100)
    public String getUsername() {
        return this.username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    @Column(name = "created_date", nullable = false)
    public LocalDateTime getCreatedDate() {
        return this.createdDate;
    }

    public void setCreatedDate(LocalDateTime createdDate) {
        this.createdDate = createdDate;
    }

    @Column(name = "modified_date", nullable = false)
    public LocalDateTime getModifiedDate() {
        return this.modifiedDate;
    }

    public void setModifiedDate(LocalDateTime modifiedDate) {
        this.modifiedDate = modifiedDate;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("AccountOauth (");

        sb.append(id);
        sb.append(", ").append(version);
        sb.append(", ").append(cellarId);
        sb.append(", ").append(client);
        sb.append(", ").append(username);
        sb.append(", ").append(createdDate);
        sb.append(", ").append(modifiedDate);

        sb.append(")");
        return sb.toString();
    }
}
