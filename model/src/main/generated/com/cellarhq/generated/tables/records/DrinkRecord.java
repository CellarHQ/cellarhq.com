/*
 * This file is generated by jOOQ.
 */
package com.cellarhq.generated.tables.records;


import com.cellarhq.generated.tables.Drink;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.processing.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.jooq.JSON;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "drink", schema = "public", uniqueConstraints = {
    @UniqueConstraint(name = "drink_pkey", columnNames = {"id"})
}, indexes = {
    @Index(name = "drink_pkey", unique = true, columnList = "id ASC"),
    @Index(name = "idx_drink_brewery_db_id", columnList = "brewery_db_id ASC"),
    @Index(name = "idx_drink_needs_moderation", columnList = "needs_moderation ASC")
})
public class DrinkRecord extends UpdatableRecordImpl<DrinkRecord> {

    private static final long serialVersionUID = 982956087;

    /**
     * Setter for <code>public.drink.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.drink.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false, precision = 64)
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.drink.version</code>.
     */
    public void setVersion(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.drink.version</code>.
     */
    @Column(name = "version", nullable = false, precision = 32)
    public Integer getVersion() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.drink.photo_id</code>.
     */
    public void setPhotoId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.drink.photo_id</code>.
     */
    @Column(name = "photo_id", precision = 64)
    public Long getPhotoId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.drink.organization_id</code>.
     */
    public void setOrganizationId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.drink.organization_id</code>.
     */
    @Column(name = "organization_id", nullable = false, precision = 64)
    public Long getOrganizationId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.drink.style_id</code>.
     */
    public void setStyleId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.drink.style_id</code>.
     */
    @Column(name = "style_id", precision = 64)
    public Long getStyleId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>public.drink.glassware_id</code>.
     */
    public void setGlasswareId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.drink.glassware_id</code>.
     */
    @Column(name = "glassware_id", precision = 64)
    public Long getGlasswareId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>public.drink.drink_type</code>.
     */
    public void setDrinkType(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.drink.drink_type</code>.
     */
    @Column(name = "drink_type", nullable = false, length = 10)
    public String getDrinkType() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.drink.slug</code>.
     */
    public void setSlug(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.drink.slug</code>.
     */
    @Column(name = "slug", nullable = false, length = 100)
    public String getSlug() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.drink.name</code>.
     */
    public void setName(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.drink.name</code>.
     */
    @Column(name = "name", nullable = false, length = 255)
    public String getName() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.drink.description</code>.
     */
    public void setDescription(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.drink.description</code>.
     */
    @Column(name = "description")
    public String getDescription() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.drink.srm</code>.
     */
    public void setSrm(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.drink.srm</code>.
     */
    @Column(name = "srm", precision = 32)
    public Integer getSrm() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>public.drink.ibu</code>.
     */
    public void setIbu(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.drink.ibu</code>.
     */
    @Column(name = "ibu", precision = 32)
    public Integer getIbu() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>public.drink.abv</code>.
     */
    public void setAbv(BigDecimal value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.drink.abv</code>.
     */
    @Column(name = "abv", precision = 6, scale = 3)
    public BigDecimal getAbv() {
        return (BigDecimal) get(12);
    }

    /**
     * Setter for <code>public.drink.availability</code>.
     */
    public void setAvailability(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.drink.availability</code>.
     */
    @Column(name = "availability", length = 20)
    public String getAvailability() {
        return (String) get(13);
    }

    /**
     * Setter for <code>public.drink.brewery_db_id</code>.
     */
    public void setBreweryDbId(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.drink.brewery_db_id</code>.
     */
    @Column(name = "brewery_db_id", length = 64)
    public String getBreweryDbId() {
        return (String) get(14);
    }

    /**
     * Setter for <code>public.drink.brewery_db_last_updated</code>.
     */
    public void setBreweryDbLastUpdated(LocalDateTime value) {
        set(15, value);
    }

    /**
     * Getter for <code>public.drink.brewery_db_last_updated</code>.
     */
    @Column(name = "brewery_db_last_updated")
    public LocalDateTime getBreweryDbLastUpdated() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>public.drink.locked</code>.
     */
    public void setLocked(Boolean value) {
        set(16, value);
    }

    /**
     * Getter for <code>public.drink.locked</code>.
     */
    @Column(name = "locked")
    public Boolean getLocked() {
        return (Boolean) get(16);
    }

    /**
     * Setter for <code>public.drink.needs_moderation</code>.
     */
    public void setNeedsModeration(Boolean value) {
        set(17, value);
    }

    /**
     * Getter for <code>public.drink.needs_moderation</code>.
     */
    @Column(name = "needs_moderation", nullable = false)
    public Boolean getNeedsModeration() {
        return (Boolean) get(17);
    }

    /**
     * Setter for <code>public.drink.created_date</code>.
     */
    public void setCreatedDate(LocalDateTime value) {
        set(18, value);
    }

    /**
     * Getter for <code>public.drink.created_date</code>.
     */
    @Column(name = "created_date", nullable = false)
    public LocalDateTime getCreatedDate() {
        return (LocalDateTime) get(18);
    }

    /**
     * Setter for <code>public.drink.modified_date</code>.
     */
    public void setModifiedDate(LocalDateTime value) {
        set(19, value);
    }

    /**
     * Getter for <code>public.drink.modified_date</code>.
     */
    @Column(name = "modified_date", nullable = false)
    public LocalDateTime getModifiedDate() {
        return (LocalDateTime) get(19);
    }

    /**
     * Setter for <code>public.drink.data</code>.
     */
    public void setData(JSON value) {
        set(20, value);
    }

    /**
     * Getter for <code>public.drink.data</code>.
     */
    @Column(name = "data")
    public JSON getData() {
        return (JSON) get(20);
    }

    /**
     * Setter for <code>public.drink.warning_flag</code>.
     */
    public void setWarningFlag(Boolean value) {
        set(21, value);
    }

    /**
     * Getter for <code>public.drink.warning_flag</code>.
     */
    @Column(name = "warning_flag", nullable = false)
    public Boolean getWarningFlag() {
        return (Boolean) get(21);
    }

    /**
     * Setter for <code>public.drink.tradable_beers</code>.
     */
    public void setTradableBeers(Short value) {
        set(22, value);
    }

    /**
     * Getter for <code>public.drink.tradable_beers</code>.
     */
    @Column(name = "tradable_beers", nullable = false, precision = 16)
    public Short getTradableBeers() {
        return (Short) get(22);
    }

    /**
     * Setter for <code>public.drink.cellared_beers</code>.
     */
    public void setCellaredBeers(Short value) {
        set(23, value);
    }

    /**
     * Getter for <code>public.drink.cellared_beers</code>.
     */
    @Column(name = "cellared_beers", nullable = false, precision = 16)
    public Short getCellaredBeers() {
        return (Short) get(23);
    }

    /**
     * Setter for <code>public.drink.contained_in_cellars</code>.
     */
    public void setContainedInCellars(Short value) {
        set(24, value);
    }

    /**
     * Getter for <code>public.drink.contained_in_cellars</code>.
     */
    @Column(name = "contained_in_cellars", nullable = false, precision = 16)
    public Short getContainedInCellars() {
        return (Short) get(24);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DrinkRecord
     */
    public DrinkRecord() {
        super(Drink.DRINK);
    }

    /**
     * Create a detached, initialised DrinkRecord
     */
    public DrinkRecord(Long id, Integer version, Long photoId, Long organizationId, Long styleId, Long glasswareId, String drinkType, String slug, String name, String description, Integer srm, Integer ibu, BigDecimal abv, String availability, String breweryDbId, LocalDateTime breweryDbLastUpdated, Boolean locked, Boolean needsModeration, LocalDateTime createdDate, LocalDateTime modifiedDate, JSON data, Boolean warningFlag, Short tradableBeers, Short cellaredBeers, Short containedInCellars) {
        super(Drink.DRINK);

        set(0, id);
        set(1, version);
        set(2, photoId);
        set(3, organizationId);
        set(4, styleId);
        set(5, glasswareId);
        set(6, drinkType);
        set(7, slug);
        set(8, name);
        set(9, description);
        set(10, srm);
        set(11, ibu);
        set(12, abv);
        set(13, availability);
        set(14, breweryDbId);
        set(15, breweryDbLastUpdated);
        set(16, locked);
        set(17, needsModeration);
        set(18, createdDate);
        set(19, modifiedDate);
        set(20, data);
        set(21, warningFlag);
        set(22, tradableBeers);
        set(23, cellaredBeers);
        set(24, containedInCellars);
    }
}
