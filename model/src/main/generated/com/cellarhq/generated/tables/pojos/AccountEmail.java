/*
 * This file is generated by jOOQ.
 */
package com.cellarhq.generated.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "account_email", schema = "public", uniqueConstraints = {
    @UniqueConstraint(name = "pk_account_email", columnNames = {"id"}),
    @UniqueConstraint(name = "unq_account_email_email", columnNames = {"email"})
}, indexes = {
    @Index(name = "idx_account_email_email", columnList = "email ASC"),
    @Index(name = "pk_account_email", unique = true, columnList = "id ASC"),
    @Index(name = "unq_account_email_email", unique = true, columnList = "email ASC")
})
public class AccountEmail implements Serializable {

    private static final long serialVersionUID = 1902780474;

    private Long      id;
    private Integer   version;
    private Long      cellarId;
    private String    email;
    private String    password;
    private Timestamp createdDate;
    private Timestamp modifiedDate;
    private Timestamp lastLoginAttempt;
    private Short     loginAttemptCounter;

    public AccountEmail() {}

    public AccountEmail(AccountEmail value) {
        this.id = value.id;
        this.version = value.version;
        this.cellarId = value.cellarId;
        this.email = value.email;
        this.password = value.password;
        this.createdDate = value.createdDate;
        this.modifiedDate = value.modifiedDate;
        this.lastLoginAttempt = value.lastLoginAttempt;
        this.loginAttemptCounter = value.loginAttemptCounter;
    }

    public AccountEmail(
        Long      id,
        Integer   version,
        Long      cellarId,
        String    email,
        String    password,
        Timestamp createdDate,
        Timestamp modifiedDate,
        Timestamp lastLoginAttempt,
        Short     loginAttemptCounter
    ) {
        this.id = id;
        this.version = version;
        this.cellarId = cellarId;
        this.email = email;
        this.password = password;
        this.createdDate = createdDate;
        this.modifiedDate = modifiedDate;
        this.lastLoginAttempt = lastLoginAttempt;
        this.loginAttemptCounter = loginAttemptCounter;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable = false, precision = 64)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Column(name = "version", nullable = false, precision = 32)
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @Column(name = "cellar_id", nullable = false, precision = 64)
    public Long getCellarId() {
        return this.cellarId;
    }

    public void setCellarId(Long cellarId) {
        this.cellarId = cellarId;
    }

    @Column(name = "email", nullable = false, length = 255)
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Column(name = "password", nullable = false, length = 60)
    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    @Column(name = "created_date", nullable = false)
    public Timestamp getCreatedDate() {
        return this.createdDate;
    }

    public void setCreatedDate(Timestamp createdDate) {
        this.createdDate = createdDate;
    }

    @Column(name = "modified_date", nullable = false)
    public Timestamp getModifiedDate() {
        return this.modifiedDate;
    }

    public void setModifiedDate(Timestamp modifiedDate) {
        this.modifiedDate = modifiedDate;
    }

    @Column(name = "last_login_attempt")
    public Timestamp getLastLoginAttempt() {
        return this.lastLoginAttempt;
    }

    public void setLastLoginAttempt(Timestamp lastLoginAttempt) {
        this.lastLoginAttempt = lastLoginAttempt;
    }

    @Column(name = "login_attempt_counter", nullable = false, precision = 16)
    public Short getLoginAttemptCounter() {
        return this.loginAttemptCounter;
    }

    public void setLoginAttemptCounter(Short loginAttemptCounter) {
        this.loginAttemptCounter = loginAttemptCounter;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("AccountEmail (");

        sb.append(id);
        sb.append(", ").append(version);
        sb.append(", ").append(cellarId);
        sb.append(", ").append(email);
        sb.append(", ").append(password);
        sb.append(", ").append(createdDate);
        sb.append(", ").append(modifiedDate);
        sb.append(", ").append(lastLoginAttempt);
        sb.append(", ").append(loginAttemptCounter);

        sb.append(")");
        return sb.toString();
    }
}
