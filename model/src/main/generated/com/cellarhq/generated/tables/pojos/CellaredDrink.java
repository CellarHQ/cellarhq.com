/*
 * This file is generated by jOOQ.
 */
package com.cellarhq.generated.tables.pojos;


import java.io.Serializable;
import java.sql.Date;
import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "cellared_drink", schema = "public", uniqueConstraints = {
    @UniqueConstraint(name = "pk_cellared_drink", columnNames = {"id"})
}, indexes = {
    @Index(name = "idx_cellared_drink_drink_by_date", columnList = "drink_by_date ASC"),
    @Index(name = "pk_cellared_drink", unique = true, columnList = "id ASC")
})
public class CellaredDrink implements Serializable {

    private static final long serialVersionUID = 1033969014;

    private Long      id;
    private Integer   version;
    private Long      cellarId;
    private Long      drinkId;
    private Date      bottleDate;
    private String    size;
    private Integer   quantity;
    private String    notes;
    private Date      drinkByDate;
    private Timestamp createdDate;
    private Timestamp modifiedDate;
    private String    binIdentifier;
    private Boolean   tradeable;
    private Short     numTradeable;
    private Date      dateAcquired;

    public CellaredDrink() {}

    public CellaredDrink(CellaredDrink value) {
        this.id = value.id;
        this.version = value.version;
        this.cellarId = value.cellarId;
        this.drinkId = value.drinkId;
        this.bottleDate = value.bottleDate;
        this.size = value.size;
        this.quantity = value.quantity;
        this.notes = value.notes;
        this.drinkByDate = value.drinkByDate;
        this.createdDate = value.createdDate;
        this.modifiedDate = value.modifiedDate;
        this.binIdentifier = value.binIdentifier;
        this.tradeable = value.tradeable;
        this.numTradeable = value.numTradeable;
        this.dateAcquired = value.dateAcquired;
    }

    public CellaredDrink(
        Long      id,
        Integer   version,
        Long      cellarId,
        Long      drinkId,
        Date      bottleDate,
        String    size,
        Integer   quantity,
        String    notes,
        Date      drinkByDate,
        Timestamp createdDate,
        Timestamp modifiedDate,
        String    binIdentifier,
        Boolean   tradeable,
        Short     numTradeable,
        Date      dateAcquired
    ) {
        this.id = id;
        this.version = version;
        this.cellarId = cellarId;
        this.drinkId = drinkId;
        this.bottleDate = bottleDate;
        this.size = size;
        this.quantity = quantity;
        this.notes = notes;
        this.drinkByDate = drinkByDate;
        this.createdDate = createdDate;
        this.modifiedDate = modifiedDate;
        this.binIdentifier = binIdentifier;
        this.tradeable = tradeable;
        this.numTradeable = numTradeable;
        this.dateAcquired = dateAcquired;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable = false, precision = 64)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Column(name = "version", nullable = false, precision = 32)
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @Column(name = "cellar_id", nullable = false, precision = 64)
    public Long getCellarId() {
        return this.cellarId;
    }

    public void setCellarId(Long cellarId) {
        this.cellarId = cellarId;
    }

    @Column(name = "drink_id", nullable = false, precision = 64)
    public Long getDrinkId() {
        return this.drinkId;
    }

    public void setDrinkId(Long drinkId) {
        this.drinkId = drinkId;
    }

    @Column(name = "bottle_date")
    public Date getBottleDate() {
        return this.bottleDate;
    }

    public void setBottleDate(Date bottleDate) {
        this.bottleDate = bottleDate;
    }

    @Column(name = "size", length = 30)
    public String getSize() {
        return this.size;
    }

    public void setSize(String size) {
        this.size = size;
    }

    @Column(name = "quantity", nullable = false, precision = 32)
    public Integer getQuantity() {
        return this.quantity;
    }

    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }

    @Column(name = "notes")
    public String getNotes() {
        return this.notes;
    }

    public void setNotes(String notes) {
        this.notes = notes;
    }

    @Column(name = "drink_by_date")
    public Date getDrinkByDate() {
        return this.drinkByDate;
    }

    public void setDrinkByDate(Date drinkByDate) {
        this.drinkByDate = drinkByDate;
    }

    @Column(name = "created_date", nullable = false)
    public Timestamp getCreatedDate() {
        return this.createdDate;
    }

    public void setCreatedDate(Timestamp createdDate) {
        this.createdDate = createdDate;
    }

    @Column(name = "modified_date", nullable = false)
    public Timestamp getModifiedDate() {
        return this.modifiedDate;
    }

    public void setModifiedDate(Timestamp modifiedDate) {
        this.modifiedDate = modifiedDate;
    }

    @Column(name = "bin_identifier", length = 20)
    public String getBinIdentifier() {
        return this.binIdentifier;
    }

    public void setBinIdentifier(String binIdentifier) {
        this.binIdentifier = binIdentifier;
    }

    @Column(name = "tradeable", nullable = false)
    public Boolean getTradeable() {
        return this.tradeable;
    }

    public void setTradeable(Boolean tradeable) {
        this.tradeable = tradeable;
    }

    @Column(name = "num_tradeable", precision = 16)
    public Short getNumTradeable() {
        return this.numTradeable;
    }

    public void setNumTradeable(Short numTradeable) {
        this.numTradeable = numTradeable;
    }

    @Column(name = "date_acquired")
    public Date getDateAcquired() {
        return this.dateAcquired;
    }

    public void setDateAcquired(Date dateAcquired) {
        this.dateAcquired = dateAcquired;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CellaredDrink (");

        sb.append(id);
        sb.append(", ").append(version);
        sb.append(", ").append(cellarId);
        sb.append(", ").append(drinkId);
        sb.append(", ").append(bottleDate);
        sb.append(", ").append(size);
        sb.append(", ").append(quantity);
        sb.append(", ").append(notes);
        sb.append(", ").append(drinkByDate);
        sb.append(", ").append(createdDate);
        sb.append(", ").append(modifiedDate);
        sb.append(", ").append(binIdentifier);
        sb.append(", ").append(tradeable);
        sb.append(", ").append(numTradeable);
        sb.append(", ").append(dateAcquired);

        sb.append(")");
        return sb.toString();
    }
}
