/*
 * This file is generated by jOOQ.
 */
package com.cellarhq.generated.tables.records;


import com.cellarhq.generated.tables.PasswordChangeRequest;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "password_change_request", schema = "public", uniqueConstraints = {
    @UniqueConstraint(name = "password_change_request_pkey", columnNames = {"id"})
}, indexes = {
    @Index(name = "password_change_request_pkey", unique = true, columnList = "id ASC")
})
public class PasswordChangeRequestRecord extends UpdatableRecordImpl<PasswordChangeRequestRecord> implements Record3<String, Long, LocalDateTime> {

    private static final long serialVersionUID = -1508653630;

    /**
     * Setter for <code>public.password_change_request.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.password_change_request.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false, length = 32)
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.password_change_request.account_email_id</code>.
     */
    public void setAccountEmailId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.password_change_request.account_email_id</code>.
     */
    @Column(name = "account_email_id", nullable = false, precision = 64)
    public Long getAccountEmailId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.password_change_request.created_date</code>.
     */
    public void setCreatedDate(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.password_change_request.created_date</code>.
     */
    @Column(name = "created_date", nullable = false)
    public LocalDateTime getCreatedDate() {
        return (LocalDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, Long, LocalDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, Long, LocalDateTime> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return PasswordChangeRequest.PASSWORD_CHANGE_REQUEST.ID;
    }

    @Override
    public Field<Long> field2() {
        return PasswordChangeRequest.PASSWORD_CHANGE_REQUEST.ACCOUNT_EMAIL_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return PasswordChangeRequest.PASSWORD_CHANGE_REQUEST.CREATED_DATE;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getAccountEmailId();
    }

    @Override
    public LocalDateTime component3() {
        return getCreatedDate();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getAccountEmailId();
    }

    @Override
    public LocalDateTime value3() {
        return getCreatedDate();
    }

    @Override
    public PasswordChangeRequestRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public PasswordChangeRequestRecord value2(Long value) {
        setAccountEmailId(value);
        return this;
    }

    @Override
    public PasswordChangeRequestRecord value3(LocalDateTime value) {
        setCreatedDate(value);
        return this;
    }

    @Override
    public PasswordChangeRequestRecord values(String value1, Long value2, LocalDateTime value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PasswordChangeRequestRecord
     */
    public PasswordChangeRequestRecord() {
        super(PasswordChangeRequest.PASSWORD_CHANGE_REQUEST);
    }

    /**
     * Create a detached, initialised PasswordChangeRequestRecord
     */
    public PasswordChangeRequestRecord(String id, Long accountEmailId, LocalDateTime createdDate) {
        super(PasswordChangeRequest.PASSWORD_CHANGE_REQUEST);

        set(0, id);
        set(1, accountEmailId);
        set(2, createdDate);
    }
}
