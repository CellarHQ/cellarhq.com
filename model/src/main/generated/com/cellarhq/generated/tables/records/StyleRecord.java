/*
 * This file is generated by jOOQ.
 */
package com.cellarhq.generated.tables.records;


import com.cellarhq.generated.tables.Style;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.jooq.Field;
import org.jooq.JSON;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "style", schema = "public", uniqueConstraints = {
    @UniqueConstraint(name = "pk_style", columnNames = {"id"})
}, indexes = {
    @Index(name = "idx_style_brewery_db_id", columnList = "brewery_db_id ASC"),
    @Index(name = "pk_style", unique = true, columnList = "id ASC")
})
public class StyleRecord extends UpdatableRecordImpl<StyleRecord> implements Record11<Long, Integer, Long, String, String, Boolean, String, Timestamp, Timestamp, Timestamp, JSON> {

    private static final long serialVersionUID = 577697628;

    /**
     * Setter for <code>public.style.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.style.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable = false, precision = 64)
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.style.version</code>.
     */
    public void setVersion(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.style.version</code>.
     */
    @Column(name = "version", nullable = false, precision = 32)
    public Integer getVersion() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.style.category_id</code>.
     */
    public void setCategoryId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.style.category_id</code>.
     */
    @Column(name = "category_id", nullable = false, precision = 64)
    public Long getCategoryId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.style.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.style.name</code>.
     */
    @Column(name = "name", nullable = false, length = 100)
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.style.description</code>.
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.style.description</code>.
     */
    @Column(name = "description")
    public String getDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.style.searchable</code>.
     */
    public void setSearchable(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.style.searchable</code>.
     */
    @Column(name = "searchable", nullable = false)
    public Boolean getSearchable() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>public.style.brewery_db_id</code>.
     */
    public void setBreweryDbId(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.style.brewery_db_id</code>.
     */
    @Column(name = "brewery_db_id", length = 64)
    public String getBreweryDbId() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.style.brewery_db_last_updated</code>.
     */
    public void setBreweryDbLastUpdated(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.style.brewery_db_last_updated</code>.
     */
    @Column(name = "brewery_db_last_updated")
    public Timestamp getBreweryDbLastUpdated() {
        return (Timestamp) get(7);
    }

    /**
     * Setter for <code>public.style.created_date</code>.
     */
    public void setCreatedDate(Timestamp value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.style.created_date</code>.
     */
    @Column(name = "created_date", nullable = false)
    public Timestamp getCreatedDate() {
        return (Timestamp) get(8);
    }

    /**
     * Setter for <code>public.style.modified_date</code>.
     */
    public void setModifiedDate(Timestamp value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.style.modified_date</code>.
     */
    @Column(name = "modified_date", nullable = false)
    public Timestamp getModifiedDate() {
        return (Timestamp) get(9);
    }

    /**
     * Setter for <code>public.style.data</code>.
     */
    public void setData(JSON value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.style.data</code>.
     */
    @Column(name = "data")
    public JSON getData() {
        return (JSON) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, Integer, Long, String, String, Boolean, String, Timestamp, Timestamp, Timestamp, JSON> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Long, Integer, Long, String, String, Boolean, String, Timestamp, Timestamp, Timestamp, JSON> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Style.STYLE.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Style.STYLE.VERSION;
    }

    @Override
    public Field<Long> field3() {
        return Style.STYLE.CATEGORY_ID;
    }

    @Override
    public Field<String> field4() {
        return Style.STYLE.NAME;
    }

    @Override
    public Field<String> field5() {
        return Style.STYLE.DESCRIPTION;
    }

    @Override
    public Field<Boolean> field6() {
        return Style.STYLE.SEARCHABLE;
    }

    @Override
    public Field<String> field7() {
        return Style.STYLE.BREWERY_DB_ID;
    }

    @Override
    public Field<Timestamp> field8() {
        return Style.STYLE.BREWERY_DB_LAST_UPDATED;
    }

    @Override
    public Field<Timestamp> field9() {
        return Style.STYLE.CREATED_DATE;
    }

    @Override
    public Field<Timestamp> field10() {
        return Style.STYLE.MODIFIED_DATE;
    }

    @Override
    public Field<JSON> field11() {
        return Style.STYLE.DATA;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getVersion();
    }

    @Override
    public Long component3() {
        return getCategoryId();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public String component5() {
        return getDescription();
    }

    @Override
    public Boolean component6() {
        return getSearchable();
    }

    @Override
    public String component7() {
        return getBreweryDbId();
    }

    @Override
    public Timestamp component8() {
        return getBreweryDbLastUpdated();
    }

    @Override
    public Timestamp component9() {
        return getCreatedDate();
    }

    @Override
    public Timestamp component10() {
        return getModifiedDate();
    }

    @Override
    public JSON component11() {
        return getData();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getVersion();
    }

    @Override
    public Long value3() {
        return getCategoryId();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public String value5() {
        return getDescription();
    }

    @Override
    public Boolean value6() {
        return getSearchable();
    }

    @Override
    public String value7() {
        return getBreweryDbId();
    }

    @Override
    public Timestamp value8() {
        return getBreweryDbLastUpdated();
    }

    @Override
    public Timestamp value9() {
        return getCreatedDate();
    }

    @Override
    public Timestamp value10() {
        return getModifiedDate();
    }

    @Override
    public JSON value11() {
        return getData();
    }

    @Override
    public StyleRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public StyleRecord value2(Integer value) {
        setVersion(value);
        return this;
    }

    @Override
    public StyleRecord value3(Long value) {
        setCategoryId(value);
        return this;
    }

    @Override
    public StyleRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public StyleRecord value5(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public StyleRecord value6(Boolean value) {
        setSearchable(value);
        return this;
    }

    @Override
    public StyleRecord value7(String value) {
        setBreweryDbId(value);
        return this;
    }

    @Override
    public StyleRecord value8(Timestamp value) {
        setBreweryDbLastUpdated(value);
        return this;
    }

    @Override
    public StyleRecord value9(Timestamp value) {
        setCreatedDate(value);
        return this;
    }

    @Override
    public StyleRecord value10(Timestamp value) {
        setModifiedDate(value);
        return this;
    }

    @Override
    public StyleRecord value11(JSON value) {
        setData(value);
        return this;
    }

    @Override
    public StyleRecord values(Long value1, Integer value2, Long value3, String value4, String value5, Boolean value6, String value7, Timestamp value8, Timestamp value9, Timestamp value10, JSON value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StyleRecord
     */
    public StyleRecord() {
        super(Style.STYLE);
    }

    /**
     * Create a detached, initialised StyleRecord
     */
    public StyleRecord(Long id, Integer version, Long categoryId, String name, String description, Boolean searchable, String breweryDbId, Timestamp breweryDbLastUpdated, Timestamp createdDate, Timestamp modifiedDate, JSON data) {
        super(Style.STYLE);

        set(0, id);
        set(1, version);
        set(2, categoryId);
        set(3, name);
        set(4, description);
        set(5, searchable);
        set(6, breweryDbId);
        set(7, breweryDbLastUpdated);
        set(8, createdDate);
        set(9, modifiedDate);
        set(10, data);
    }
}
