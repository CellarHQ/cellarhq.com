/*
 * This file is generated by jOOQ.
 */
package com.cellarhq.generated.tables.daos;


import com.cellarhq.generated.tables.AccountEmail;
import com.cellarhq.generated.tables.records.AccountEmailRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountEmailDao extends DAOImpl<AccountEmailRecord, com.cellarhq.generated.tables.pojos.AccountEmail, Long> {

    /**
     * Create a new AccountEmailDao without any configuration
     */
    public AccountEmailDao() {
        super(AccountEmail.ACCOUNT_EMAIL, com.cellarhq.generated.tables.pojos.AccountEmail.class);
    }

    /**
     * Create a new AccountEmailDao with an attached configuration
     */
    public AccountEmailDao(Configuration configuration) {
        super(AccountEmail.ACCOUNT_EMAIL, com.cellarhq.generated.tables.pojos.AccountEmail.class, configuration);
    }

    @Override
    public Long getId(com.cellarhq.generated.tables.pojos.AccountEmail object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.cellarhq.generated.tables.pojos.AccountEmail> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(AccountEmail.ACCOUNT_EMAIL.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.cellarhq.generated.tables.pojos.AccountEmail> fetchById(Long... values) {
        return fetch(AccountEmail.ACCOUNT_EMAIL.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.cellarhq.generated.tables.pojos.AccountEmail fetchOneById(Long value) {
        return fetchOne(AccountEmail.ACCOUNT_EMAIL.ID, value);
    }

    /**
     * Fetch records that have <code>version BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.cellarhq.generated.tables.pojos.AccountEmail> fetchRangeOfVersion(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(AccountEmail.ACCOUNT_EMAIL.VERSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>version IN (values)</code>
     */
    public List<com.cellarhq.generated.tables.pojos.AccountEmail> fetchByVersion(Integer... values) {
        return fetch(AccountEmail.ACCOUNT_EMAIL.VERSION, values);
    }

    /**
     * Fetch records that have <code>cellar_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.cellarhq.generated.tables.pojos.AccountEmail> fetchRangeOfCellarId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(AccountEmail.ACCOUNT_EMAIL.CELLAR_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cellar_id IN (values)</code>
     */
    public List<com.cellarhq.generated.tables.pojos.AccountEmail> fetchByCellarId(Long... values) {
        return fetch(AccountEmail.ACCOUNT_EMAIL.CELLAR_ID, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.cellarhq.generated.tables.pojos.AccountEmail> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(AccountEmail.ACCOUNT_EMAIL.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<com.cellarhq.generated.tables.pojos.AccountEmail> fetchByEmail(String... values) {
        return fetch(AccountEmail.ACCOUNT_EMAIL.EMAIL, values);
    }

    /**
     * Fetch a unique record that has <code>email = value</code>
     */
    public com.cellarhq.generated.tables.pojos.AccountEmail fetchOneByEmail(String value) {
        return fetchOne(AccountEmail.ACCOUNT_EMAIL.EMAIL, value);
    }

    /**
     * Fetch records that have <code>password BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.cellarhq.generated.tables.pojos.AccountEmail> fetchRangeOfPassword(String lowerInclusive, String upperInclusive) {
        return fetchRange(AccountEmail.ACCOUNT_EMAIL.PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<com.cellarhq.generated.tables.pojos.AccountEmail> fetchByPassword(String... values) {
        return fetch(AccountEmail.ACCOUNT_EMAIL.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>created_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.cellarhq.generated.tables.pojos.AccountEmail> fetchRangeOfCreatedDate(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(AccountEmail.ACCOUNT_EMAIL.CREATED_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_date IN (values)</code>
     */
    public List<com.cellarhq.generated.tables.pojos.AccountEmail> fetchByCreatedDate(Timestamp... values) {
        return fetch(AccountEmail.ACCOUNT_EMAIL.CREATED_DATE, values);
    }

    /**
     * Fetch records that have <code>modified_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.cellarhq.generated.tables.pojos.AccountEmail> fetchRangeOfModifiedDate(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(AccountEmail.ACCOUNT_EMAIL.MODIFIED_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modified_date IN (values)</code>
     */
    public List<com.cellarhq.generated.tables.pojos.AccountEmail> fetchByModifiedDate(Timestamp... values) {
        return fetch(AccountEmail.ACCOUNT_EMAIL.MODIFIED_DATE, values);
    }

    /**
     * Fetch records that have <code>last_login_attempt BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.cellarhq.generated.tables.pojos.AccountEmail> fetchRangeOfLastLoginAttempt(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(AccountEmail.ACCOUNT_EMAIL.LAST_LOGIN_ATTEMPT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_login_attempt IN (values)</code>
     */
    public List<com.cellarhq.generated.tables.pojos.AccountEmail> fetchByLastLoginAttempt(Timestamp... values) {
        return fetch(AccountEmail.ACCOUNT_EMAIL.LAST_LOGIN_ATTEMPT, values);
    }

    /**
     * Fetch records that have <code>login_attempt_counter BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.cellarhq.generated.tables.pojos.AccountEmail> fetchRangeOfLoginAttemptCounter(Short lowerInclusive, Short upperInclusive) {
        return fetchRange(AccountEmail.ACCOUNT_EMAIL.LOGIN_ATTEMPT_COUNTER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>login_attempt_counter IN (values)</code>
     */
    public List<com.cellarhq.generated.tables.pojos.AccountEmail> fetchByLoginAttemptCounter(Short... values) {
        return fetch(AccountEmail.ACCOUNT_EMAIL.LOGIN_ATTEMPT_COUNTER, values);
    }
}
