/*
 * This file is generated by jOOQ.
 */
package com.cellarhq.generated.tables.records;


import com.cellarhq.generated.tables.Activity;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.jooq.Field;
import org.jooq.JSON;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "activity", schema = "public", uniqueConstraints = {
    @UniqueConstraint(name = "activity_pkey", columnNames = {"id"})
}, indexes = {
    @Index(name = "activity_pkey", unique = true, columnList = "id ASC")
})
public class ActivityRecord extends UpdatableRecordImpl<ActivityRecord> implements Record8<Long, Integer, Long, String, String, Boolean, JSON, LocalDateTime> {

    private static final long serialVersionUID = -1989851309;

    /**
     * Setter for <code>public.activity.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.activity.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false, precision = 64)
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.activity.version</code>.
     */
    public void setVersion(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.activity.version</code>.
     */
    @Column(name = "version", nullable = false, precision = 32)
    public Integer getVersion() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.activity.cellar_id</code>.
     */
    public void setCellarId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.activity.cellar_id</code>.
     */
    @Column(name = "cellar_id", nullable = false, precision = 64)
    public Long getCellarId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.activity.subject</code>.
     */
    public void setSubject(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.activity.subject</code>.
     */
    @Column(name = "subject", nullable = false, length = 255)
    public String getSubject() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.activity.action</code>.
     */
    public void setAction(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.activity.action</code>.
     */
    @Column(name = "action", nullable = false, length = 255)
    public String getAction() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.activity.private</code>.
     */
    public void setPrivate(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.activity.private</code>.
     */
    @Column(name = "private", nullable = false)
    public Boolean getPrivate() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>public.activity.data</code>.
     */
    public void setData(JSON value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.activity.data</code>.
     */
    @Column(name = "data")
    public JSON getData() {
        return (JSON) get(6);
    }

    /**
     * Setter for <code>public.activity.created_date</code>.
     */
    public void setCreatedDate(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.activity.created_date</code>.
     */
    @Column(name = "created_date", nullable = false)
    public LocalDateTime getCreatedDate() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Integer, Long, String, String, Boolean, JSON, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Integer, Long, String, String, Boolean, JSON, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Activity.ACTIVITY.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Activity.ACTIVITY.VERSION;
    }

    @Override
    public Field<Long> field3() {
        return Activity.ACTIVITY.CELLAR_ID;
    }

    @Override
    public Field<String> field4() {
        return Activity.ACTIVITY.SUBJECT;
    }

    @Override
    public Field<String> field5() {
        return Activity.ACTIVITY.ACTION;
    }

    @Override
    public Field<Boolean> field6() {
        return Activity.ACTIVITY.PRIVATE;
    }

    @Override
    public Field<JSON> field7() {
        return Activity.ACTIVITY.DATA;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Activity.ACTIVITY.CREATED_DATE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getVersion();
    }

    @Override
    public Long component3() {
        return getCellarId();
    }

    @Override
    public String component4() {
        return getSubject();
    }

    @Override
    public String component5() {
        return getAction();
    }

    @Override
    public Boolean component6() {
        return getPrivate();
    }

    @Override
    public JSON component7() {
        return getData();
    }

    @Override
    public LocalDateTime component8() {
        return getCreatedDate();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getVersion();
    }

    @Override
    public Long value3() {
        return getCellarId();
    }

    @Override
    public String value4() {
        return getSubject();
    }

    @Override
    public String value5() {
        return getAction();
    }

    @Override
    public Boolean value6() {
        return getPrivate();
    }

    @Override
    public JSON value7() {
        return getData();
    }

    @Override
    public LocalDateTime value8() {
        return getCreatedDate();
    }

    @Override
    public ActivityRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ActivityRecord value2(Integer value) {
        setVersion(value);
        return this;
    }

    @Override
    public ActivityRecord value3(Long value) {
        setCellarId(value);
        return this;
    }

    @Override
    public ActivityRecord value4(String value) {
        setSubject(value);
        return this;
    }

    @Override
    public ActivityRecord value5(String value) {
        setAction(value);
        return this;
    }

    @Override
    public ActivityRecord value6(Boolean value) {
        setPrivate(value);
        return this;
    }

    @Override
    public ActivityRecord value7(JSON value) {
        setData(value);
        return this;
    }

    @Override
    public ActivityRecord value8(LocalDateTime value) {
        setCreatedDate(value);
        return this;
    }

    @Override
    public ActivityRecord values(Long value1, Integer value2, Long value3, String value4, String value5, Boolean value6, JSON value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ActivityRecord
     */
    public ActivityRecord() {
        super(Activity.ACTIVITY);
    }

    /**
     * Create a detached, initialised ActivityRecord
     */
    public ActivityRecord(Long id, Integer version, Long cellarId, String subject, String action, Boolean private_, JSON data, LocalDateTime createdDate) {
        super(Activity.ACTIVITY);

        set(0, id);
        set(1, version);
        set(2, cellarId);
        set(3, subject);
        set(4, action);
        set(5, private_);
        set(6, data);
        set(7, createdDate);
    }
}
