/*
 * This file is generated by jOOQ.
 */
package com.cellarhq.generated.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "cellar", schema = "public", uniqueConstraints = {
    @UniqueConstraint(name = "pk_cellar", columnNames = {"id"}),
    @UniqueConstraint(name = "unq_cellar_screen_name", columnNames = {"screen_name"}),
    @UniqueConstraint(name = "cellar_slug_unique_constraint", columnNames = {"slug"})
}, indexes = {
    @Index(name = "cellar_slug_unique_constraint", unique = true, columnList = "slug ASC"),
    @Index(name = "pk_cellar", unique = true, columnList = "id ASC"),
    @Index(name = "unq_cellar_screen_name", unique = true, columnList = "screen_name ASC")
})
public class Cellar implements Serializable {

    private static final long serialVersionUID = 1538255902;

    private Long      id;
    private Integer   version;
    private Long      photoId;
    private String    screenName;
    private String    displayName;
    private String    location;
    private String    website;
    private String    bio;
    private Boolean   updateFromNetwork;
    private String    contactEmail;
    private Boolean   private_;
    private Timestamp lastLogin;
    private String    lastLoginIp;
    private Timestamp createdDate;
    private Timestamp modifiedDate;
    private String    twitter;
    private String    reddit;
    private String    beeradvocate;
    private String    ratebeer;
    private Short     totalBeers;
    private Short     uniqueBeers;
    private Short     uniqueBreweries;
    private Boolean   hasTradeableBeers;
    private String    slug;
    private String    role;

    public Cellar() {}

    public Cellar(Cellar value) {
        this.id = value.id;
        this.version = value.version;
        this.photoId = value.photoId;
        this.screenName = value.screenName;
        this.displayName = value.displayName;
        this.location = value.location;
        this.website = value.website;
        this.bio = value.bio;
        this.updateFromNetwork = value.updateFromNetwork;
        this.contactEmail = value.contactEmail;
        this.private_ = value.private_;
        this.lastLogin = value.lastLogin;
        this.lastLoginIp = value.lastLoginIp;
        this.createdDate = value.createdDate;
        this.modifiedDate = value.modifiedDate;
        this.twitter = value.twitter;
        this.reddit = value.reddit;
        this.beeradvocate = value.beeradvocate;
        this.ratebeer = value.ratebeer;
        this.totalBeers = value.totalBeers;
        this.uniqueBeers = value.uniqueBeers;
        this.uniqueBreweries = value.uniqueBreweries;
        this.hasTradeableBeers = value.hasTradeableBeers;
        this.slug = value.slug;
        this.role = value.role;
    }

    public Cellar(
        Long      id,
        Integer   version,
        Long      photoId,
        String    screenName,
        String    displayName,
        String    location,
        String    website,
        String    bio,
        Boolean   updateFromNetwork,
        String    contactEmail,
        Boolean   private_,
        Timestamp lastLogin,
        String    lastLoginIp,
        Timestamp createdDate,
        Timestamp modifiedDate,
        String    twitter,
        String    reddit,
        String    beeradvocate,
        String    ratebeer,
        Short     totalBeers,
        Short     uniqueBeers,
        Short     uniqueBreweries,
        Boolean   hasTradeableBeers,
        String    slug,
        String    role
    ) {
        this.id = id;
        this.version = version;
        this.photoId = photoId;
        this.screenName = screenName;
        this.displayName = displayName;
        this.location = location;
        this.website = website;
        this.bio = bio;
        this.updateFromNetwork = updateFromNetwork;
        this.contactEmail = contactEmail;
        this.private_ = private_;
        this.lastLogin = lastLogin;
        this.lastLoginIp = lastLoginIp;
        this.createdDate = createdDate;
        this.modifiedDate = modifiedDate;
        this.twitter = twitter;
        this.reddit = reddit;
        this.beeradvocate = beeradvocate;
        this.ratebeer = ratebeer;
        this.totalBeers = totalBeers;
        this.uniqueBeers = uniqueBeers;
        this.uniqueBreweries = uniqueBreweries;
        this.hasTradeableBeers = hasTradeableBeers;
        this.slug = slug;
        this.role = role;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable = false, precision = 64)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Column(name = "version", nullable = false, precision = 32)
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @Column(name = "photo_id", precision = 64)
    public Long getPhotoId() {
        return this.photoId;
    }

    public void setPhotoId(Long photoId) {
        this.photoId = photoId;
    }

    @Column(name = "screen_name", nullable = false, length = 64)
    public String getScreenName() {
        return this.screenName;
    }

    public void setScreenName(String screenName) {
        this.screenName = screenName;
    }

    @Column(name = "display_name", length = 64)
    public String getDisplayName() {
        return this.displayName;
    }

    public void setDisplayName(String displayName) {
        this.displayName = displayName;
    }

    @Column(name = "location", length = 100)
    public String getLocation() {
        return this.location;
    }

    public void setLocation(String location) {
        this.location = location;
    }

    @Column(name = "website", length = 100)
    public String getWebsite() {
        return this.website;
    }

    public void setWebsite(String website) {
        this.website = website;
    }

    @Column(name = "bio")
    public String getBio() {
        return this.bio;
    }

    public void setBio(String bio) {
        this.bio = bio;
    }

    @Column(name = "update_from_network", nullable = false)
    public Boolean getUpdateFromNetwork() {
        return this.updateFromNetwork;
    }

    public void setUpdateFromNetwork(Boolean updateFromNetwork) {
        this.updateFromNetwork = updateFromNetwork;
    }

    @Column(name = "contact_email", length = 255)
    public String getContactEmail() {
        return this.contactEmail;
    }

    public void setContactEmail(String contactEmail) {
        this.contactEmail = contactEmail;
    }

    @Column(name = "private", nullable = false)
    public Boolean getPrivate() {
        return this.private_;
    }

    public void setPrivate(Boolean private_) {
        this.private_ = private_;
    }

    @Column(name = "last_login")
    public Timestamp getLastLogin() {
        return this.lastLogin;
    }

    public void setLastLogin(Timestamp lastLogin) {
        this.lastLogin = lastLogin;
    }

    @Column(name = "last_login_ip", length = 30)
    public String getLastLoginIp() {
        return this.lastLoginIp;
    }

    public void setLastLoginIp(String lastLoginIp) {
        this.lastLoginIp = lastLoginIp;
    }

    @Column(name = "created_date", nullable = false)
    public Timestamp getCreatedDate() {
        return this.createdDate;
    }

    public void setCreatedDate(Timestamp createdDate) {
        this.createdDate = createdDate;
    }

    @Column(name = "modified_date", nullable = false)
    public Timestamp getModifiedDate() {
        return this.modifiedDate;
    }

    public void setModifiedDate(Timestamp modifiedDate) {
        this.modifiedDate = modifiedDate;
    }

    @Column(name = "twitter", length = 16)
    public String getTwitter() {
        return this.twitter;
    }

    public void setTwitter(String twitter) {
        this.twitter = twitter;
    }

    @Column(name = "reddit", length = 20)
    public String getReddit() {
        return this.reddit;
    }

    public void setReddit(String reddit) {
        this.reddit = reddit;
    }

    @Column(name = "beeradvocate", length = 255)
    public String getBeeradvocate() {
        return this.beeradvocate;
    }

    public void setBeeradvocate(String beeradvocate) {
        this.beeradvocate = beeradvocate;
    }

    @Column(name = "ratebeer", length = 255)
    public String getRatebeer() {
        return this.ratebeer;
    }

    public void setRatebeer(String ratebeer) {
        this.ratebeer = ratebeer;
    }

    @Column(name = "total_beers", nullable = false, precision = 16)
    public Short getTotalBeers() {
        return this.totalBeers;
    }

    public void setTotalBeers(Short totalBeers) {
        this.totalBeers = totalBeers;
    }

    @Column(name = "unique_beers", nullable = false, precision = 16)
    public Short getUniqueBeers() {
        return this.uniqueBeers;
    }

    public void setUniqueBeers(Short uniqueBeers) {
        this.uniqueBeers = uniqueBeers;
    }

    @Column(name = "unique_breweries", nullable = false, precision = 16)
    public Short getUniqueBreweries() {
        return this.uniqueBreweries;
    }

    public void setUniqueBreweries(Short uniqueBreweries) {
        this.uniqueBreweries = uniqueBreweries;
    }

    @Column(name = "has_tradeable_beers", nullable = false)
    public Boolean getHasTradeableBeers() {
        return this.hasTradeableBeers;
    }

    public void setHasTradeableBeers(Boolean hasTradeableBeers) {
        this.hasTradeableBeers = hasTradeableBeers;
    }

    @Column(name = "slug", nullable = false, length = 64)
    public String getSlug() {
        return this.slug;
    }

    public void setSlug(String slug) {
        this.slug = slug;
    }

    @Column(name = "role", nullable = false)
    public String getRole() {
        return this.role;
    }

    public void setRole(String role) {
        this.role = role;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Cellar (");

        sb.append(id);
        sb.append(", ").append(version);
        sb.append(", ").append(photoId);
        sb.append(", ").append(screenName);
        sb.append(", ").append(displayName);
        sb.append(", ").append(location);
        sb.append(", ").append(website);
        sb.append(", ").append(bio);
        sb.append(", ").append(updateFromNetwork);
        sb.append(", ").append(contactEmail);
        sb.append(", ").append(private_);
        sb.append(", ").append(lastLogin);
        sb.append(", ").append(lastLoginIp);
        sb.append(", ").append(createdDate);
        sb.append(", ").append(modifiedDate);
        sb.append(", ").append(twitter);
        sb.append(", ").append(reddit);
        sb.append(", ").append(beeradvocate);
        sb.append(", ").append(ratebeer);
        sb.append(", ").append(totalBeers);
        sb.append(", ").append(uniqueBeers);
        sb.append(", ").append(uniqueBreweries);
        sb.append(", ").append(hasTradeableBeers);
        sb.append(", ").append(slug);
        sb.append(", ").append(role);

        sb.append(")");
        return sb.toString();
    }
}
