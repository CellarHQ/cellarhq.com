/*
 * This file is generated by jOOQ.
 */
package com.cellarhq.generated.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.processing.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.jooq.JSON;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "drink", schema = "public", uniqueConstraints = {
    @UniqueConstraint(name = "drink_pkey", columnNames = {"id"})
}, indexes = {
    @Index(name = "drink_pkey", unique = true, columnList = "id ASC"),
    @Index(name = "idx_drink_brewery_db_id", columnList = "brewery_db_id ASC"),
    @Index(name = "idx_drink_needs_moderation", columnList = "needs_moderation ASC")
})
public class Drink implements Serializable {

    private static final long serialVersionUID = -940781501;

    private Long          id;
    private Integer       version;
    private Long          photoId;
    private Long          organizationId;
    private Long          styleId;
    private Long          glasswareId;
    private String        drinkType;
    private String        slug;
    private String        name;
    private String        description;
    private Integer       srm;
    private Integer       ibu;
    private BigDecimal    abv;
    private String        availability;
    private String        breweryDbId;
    private LocalDateTime breweryDbLastUpdated;
    private Boolean       locked;
    private Boolean       needsModeration;
    private LocalDateTime createdDate;
    private LocalDateTime modifiedDate;
    private JSON          data;
    private Boolean       warningFlag;
    private Short         tradableBeers;
    private Short         cellaredBeers;
    private Short         containedInCellars;

    public Drink() {}

    public Drink(Drink value) {
        this.id = value.id;
        this.version = value.version;
        this.photoId = value.photoId;
        this.organizationId = value.organizationId;
        this.styleId = value.styleId;
        this.glasswareId = value.glasswareId;
        this.drinkType = value.drinkType;
        this.slug = value.slug;
        this.name = value.name;
        this.description = value.description;
        this.srm = value.srm;
        this.ibu = value.ibu;
        this.abv = value.abv;
        this.availability = value.availability;
        this.breweryDbId = value.breweryDbId;
        this.breweryDbLastUpdated = value.breweryDbLastUpdated;
        this.locked = value.locked;
        this.needsModeration = value.needsModeration;
        this.createdDate = value.createdDate;
        this.modifiedDate = value.modifiedDate;
        this.data = value.data;
        this.warningFlag = value.warningFlag;
        this.tradableBeers = value.tradableBeers;
        this.cellaredBeers = value.cellaredBeers;
        this.containedInCellars = value.containedInCellars;
    }

    public Drink(
        Long          id,
        Integer       version,
        Long          photoId,
        Long          organizationId,
        Long          styleId,
        Long          glasswareId,
        String        drinkType,
        String        slug,
        String        name,
        String        description,
        Integer       srm,
        Integer       ibu,
        BigDecimal    abv,
        String        availability,
        String        breweryDbId,
        LocalDateTime breweryDbLastUpdated,
        Boolean       locked,
        Boolean       needsModeration,
        LocalDateTime createdDate,
        LocalDateTime modifiedDate,
        JSON          data,
        Boolean       warningFlag,
        Short         tradableBeers,
        Short         cellaredBeers,
        Short         containedInCellars
    ) {
        this.id = id;
        this.version = version;
        this.photoId = photoId;
        this.organizationId = organizationId;
        this.styleId = styleId;
        this.glasswareId = glasswareId;
        this.drinkType = drinkType;
        this.slug = slug;
        this.name = name;
        this.description = description;
        this.srm = srm;
        this.ibu = ibu;
        this.abv = abv;
        this.availability = availability;
        this.breweryDbId = breweryDbId;
        this.breweryDbLastUpdated = breweryDbLastUpdated;
        this.locked = locked;
        this.needsModeration = needsModeration;
        this.createdDate = createdDate;
        this.modifiedDate = modifiedDate;
        this.data = data;
        this.warningFlag = warningFlag;
        this.tradableBeers = tradableBeers;
        this.cellaredBeers = cellaredBeers;
        this.containedInCellars = containedInCellars;
    }

    @Id
    @Column(name = "id", nullable = false, precision = 64)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Column(name = "version", nullable = false, precision = 32)
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @Column(name = "photo_id", precision = 64)
    public Long getPhotoId() {
        return this.photoId;
    }

    public void setPhotoId(Long photoId) {
        this.photoId = photoId;
    }

    @Column(name = "organization_id", nullable = false, precision = 64)
    public Long getOrganizationId() {
        return this.organizationId;
    }

    public void setOrganizationId(Long organizationId) {
        this.organizationId = organizationId;
    }

    @Column(name = "style_id", precision = 64)
    public Long getStyleId() {
        return this.styleId;
    }

    public void setStyleId(Long styleId) {
        this.styleId = styleId;
    }

    @Column(name = "glassware_id", precision = 64)
    public Long getGlasswareId() {
        return this.glasswareId;
    }

    public void setGlasswareId(Long glasswareId) {
        this.glasswareId = glasswareId;
    }

    @Column(name = "drink_type", nullable = false, length = 10)
    public String getDrinkType() {
        return this.drinkType;
    }

    public void setDrinkType(String drinkType) {
        this.drinkType = drinkType;
    }

    @Column(name = "slug", nullable = false, length = 100)
    public String getSlug() {
        return this.slug;
    }

    public void setSlug(String slug) {
        this.slug = slug;
    }

    @Column(name = "name", nullable = false, length = 255)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "description")
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Column(name = "srm", precision = 32)
    public Integer getSrm() {
        return this.srm;
    }

    public void setSrm(Integer srm) {
        this.srm = srm;
    }

    @Column(name = "ibu", precision = 32)
    public Integer getIbu() {
        return this.ibu;
    }

    public void setIbu(Integer ibu) {
        this.ibu = ibu;
    }

    @Column(name = "abv", precision = 6, scale = 3)
    public BigDecimal getAbv() {
        return this.abv;
    }

    public void setAbv(BigDecimal abv) {
        this.abv = abv;
    }

    @Column(name = "availability", length = 20)
    public String getAvailability() {
        return this.availability;
    }

    public void setAvailability(String availability) {
        this.availability = availability;
    }

    @Column(name = "brewery_db_id", length = 64)
    public String getBreweryDbId() {
        return this.breweryDbId;
    }

    public void setBreweryDbId(String breweryDbId) {
        this.breweryDbId = breweryDbId;
    }

    @Column(name = "brewery_db_last_updated")
    public LocalDateTime getBreweryDbLastUpdated() {
        return this.breweryDbLastUpdated;
    }

    public void setBreweryDbLastUpdated(LocalDateTime breweryDbLastUpdated) {
        this.breweryDbLastUpdated = breweryDbLastUpdated;
    }

    @Column(name = "locked")
    public Boolean getLocked() {
        return this.locked;
    }

    public void setLocked(Boolean locked) {
        this.locked = locked;
    }

    @Column(name = "needs_moderation", nullable = false)
    public Boolean getNeedsModeration() {
        return this.needsModeration;
    }

    public void setNeedsModeration(Boolean needsModeration) {
        this.needsModeration = needsModeration;
    }

    @Column(name = "created_date", nullable = false)
    public LocalDateTime getCreatedDate() {
        return this.createdDate;
    }

    public void setCreatedDate(LocalDateTime createdDate) {
        this.createdDate = createdDate;
    }

    @Column(name = "modified_date", nullable = false)
    public LocalDateTime getModifiedDate() {
        return this.modifiedDate;
    }

    public void setModifiedDate(LocalDateTime modifiedDate) {
        this.modifiedDate = modifiedDate;
    }

    @Column(name = "data")
    public JSON getData() {
        return this.data;
    }

    public void setData(JSON data) {
        this.data = data;
    }

    @Column(name = "warning_flag", nullable = false)
    public Boolean getWarningFlag() {
        return this.warningFlag;
    }

    public void setWarningFlag(Boolean warningFlag) {
        this.warningFlag = warningFlag;
    }

    @Column(name = "tradable_beers", nullable = false, precision = 16)
    public Short getTradableBeers() {
        return this.tradableBeers;
    }

    public void setTradableBeers(Short tradableBeers) {
        this.tradableBeers = tradableBeers;
    }

    @Column(name = "cellared_beers", nullable = false, precision = 16)
    public Short getCellaredBeers() {
        return this.cellaredBeers;
    }

    public void setCellaredBeers(Short cellaredBeers) {
        this.cellaredBeers = cellaredBeers;
    }

    @Column(name = "contained_in_cellars", nullable = false, precision = 16)
    public Short getContainedInCellars() {
        return this.containedInCellars;
    }

    public void setContainedInCellars(Short containedInCellars) {
        this.containedInCellars = containedInCellars;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Drink (");

        sb.append(id);
        sb.append(", ").append(version);
        sb.append(", ").append(photoId);
        sb.append(", ").append(organizationId);
        sb.append(", ").append(styleId);
        sb.append(", ").append(glasswareId);
        sb.append(", ").append(drinkType);
        sb.append(", ").append(slug);
        sb.append(", ").append(name);
        sb.append(", ").append(description);
        sb.append(", ").append(srm);
        sb.append(", ").append(ibu);
        sb.append(", ").append(abv);
        sb.append(", ").append(availability);
        sb.append(", ").append(breweryDbId);
        sb.append(", ").append(breweryDbLastUpdated);
        sb.append(", ").append(locked);
        sb.append(", ").append(needsModeration);
        sb.append(", ").append(createdDate);
        sb.append(", ").append(modifiedDate);
        sb.append(", ").append(data);
        sb.append(", ").append(warningFlag);
        sb.append(", ").append(tradableBeers);
        sb.append(", ").append(cellaredBeers);
        sb.append(", ").append(containedInCellars);

        sb.append(")");
        return sb.toString();
    }
}
