/*
 * This file is generated by jOOQ.
 */
package com.cellarhq.generated.tables.records;


import com.cellarhq.generated.tables.CellaredDrink;

import java.time.LocalDate;
import java.time.LocalDateTime;

import javax.annotation.processing.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "cellared_drink", schema = "public", uniqueConstraints = {
    @UniqueConstraint(name = "cellared_drink_pkey", columnNames = {"id"})
}, indexes = {
    @Index(name = "cellared_drink_pkey", unique = true, columnList = "id ASC"),
    @Index(name = "idx_cellared_drink_drink_by_date", columnList = "drink_by_date ASC")
})
public class CellaredDrinkRecord extends UpdatableRecordImpl<CellaredDrinkRecord> implements Record15<Long, Integer, Long, Long, LocalDate, String, Integer, String, LocalDate, LocalDateTime, LocalDateTime, String, Boolean, Short, LocalDate> {

    private static final long serialVersionUID = -378297825;

    /**
     * Setter for <code>public.cellared_drink.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.cellared_drink.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false, precision = 64)
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.cellared_drink.version</code>.
     */
    public void setVersion(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.cellared_drink.version</code>.
     */
    @Column(name = "version", nullable = false, precision = 32)
    public Integer getVersion() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.cellared_drink.cellar_id</code>.
     */
    public void setCellarId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.cellared_drink.cellar_id</code>.
     */
    @Column(name = "cellar_id", nullable = false, precision = 64)
    public Long getCellarId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.cellared_drink.drink_id</code>.
     */
    public void setDrinkId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.cellared_drink.drink_id</code>.
     */
    @Column(name = "drink_id", nullable = false, precision = 64)
    public Long getDrinkId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.cellared_drink.bottle_date</code>.
     */
    public void setBottleDate(LocalDate value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.cellared_drink.bottle_date</code>.
     */
    @Column(name = "bottle_date")
    public LocalDate getBottleDate() {
        return (LocalDate) get(4);
    }

    /**
     * Setter for <code>public.cellared_drink.size</code>.
     */
    public void setSize(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.cellared_drink.size</code>.
     */
    @Column(name = "size", length = 30)
    public String getSize() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.cellared_drink.quantity</code>.
     */
    public void setQuantity(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.cellared_drink.quantity</code>.
     */
    @Column(name = "quantity", nullable = false, precision = 32)
    public Integer getQuantity() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>public.cellared_drink.notes</code>.
     */
    public void setNotes(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.cellared_drink.notes</code>.
     */
    @Column(name = "notes")
    public String getNotes() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.cellared_drink.drink_by_date</code>.
     */
    public void setDrinkByDate(LocalDate value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.cellared_drink.drink_by_date</code>.
     */
    @Column(name = "drink_by_date")
    public LocalDate getDrinkByDate() {
        return (LocalDate) get(8);
    }

    /**
     * Setter for <code>public.cellared_drink.created_date</code>.
     */
    public void setCreatedDate(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.cellared_drink.created_date</code>.
     */
    @Column(name = "created_date", nullable = false)
    public LocalDateTime getCreatedDate() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>public.cellared_drink.modified_date</code>.
     */
    public void setModifiedDate(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.cellared_drink.modified_date</code>.
     */
    @Column(name = "modified_date", nullable = false)
    public LocalDateTime getModifiedDate() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for <code>public.cellared_drink.bin_identifier</code>.
     */
    public void setBinIdentifier(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.cellared_drink.bin_identifier</code>.
     */
    @Column(name = "bin_identifier", length = 20)
    public String getBinIdentifier() {
        return (String) get(11);
    }

    /**
     * Setter for <code>public.cellared_drink.tradeable</code>.
     */
    public void setTradeable(Boolean value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.cellared_drink.tradeable</code>.
     */
    @Column(name = "tradeable", nullable = false)
    public Boolean getTradeable() {
        return (Boolean) get(12);
    }

    /**
     * Setter for <code>public.cellared_drink.num_tradeable</code>.
     */
    public void setNumTradeable(Short value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.cellared_drink.num_tradeable</code>.
     */
    @Column(name = "num_tradeable", precision = 16)
    public Short getNumTradeable() {
        return (Short) get(13);
    }

    /**
     * Setter for <code>public.cellared_drink.date_acquired</code>.
     */
    public void setDateAcquired(LocalDate value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.cellared_drink.date_acquired</code>.
     */
    @Column(name = "date_acquired")
    public LocalDate getDateAcquired() {
        return (LocalDate) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row15<Long, Integer, Long, Long, LocalDate, String, Integer, String, LocalDate, LocalDateTime, LocalDateTime, String, Boolean, Short, LocalDate> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    @Override
    public Row15<Long, Integer, Long, Long, LocalDate, String, Integer, String, LocalDate, LocalDateTime, LocalDateTime, String, Boolean, Short, LocalDate> valuesRow() {
        return (Row15) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return CellaredDrink.CELLARED_DRINK.ID;
    }

    @Override
    public Field<Integer> field2() {
        return CellaredDrink.CELLARED_DRINK.VERSION;
    }

    @Override
    public Field<Long> field3() {
        return CellaredDrink.CELLARED_DRINK.CELLAR_ID;
    }

    @Override
    public Field<Long> field4() {
        return CellaredDrink.CELLARED_DRINK.DRINK_ID;
    }

    @Override
    public Field<LocalDate> field5() {
        return CellaredDrink.CELLARED_DRINK.BOTTLE_DATE;
    }

    @Override
    public Field<String> field6() {
        return CellaredDrink.CELLARED_DRINK.SIZE;
    }

    @Override
    public Field<Integer> field7() {
        return CellaredDrink.CELLARED_DRINK.QUANTITY;
    }

    @Override
    public Field<String> field8() {
        return CellaredDrink.CELLARED_DRINK.NOTES;
    }

    @Override
    public Field<LocalDate> field9() {
        return CellaredDrink.CELLARED_DRINK.DRINK_BY_DATE;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return CellaredDrink.CELLARED_DRINK.CREATED_DATE;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return CellaredDrink.CELLARED_DRINK.MODIFIED_DATE;
    }

    @Override
    public Field<String> field12() {
        return CellaredDrink.CELLARED_DRINK.BIN_IDENTIFIER;
    }

    @Override
    public Field<Boolean> field13() {
        return CellaredDrink.CELLARED_DRINK.TRADEABLE;
    }

    @Override
    public Field<Short> field14() {
        return CellaredDrink.CELLARED_DRINK.NUM_TRADEABLE;
    }

    @Override
    public Field<LocalDate> field15() {
        return CellaredDrink.CELLARED_DRINK.DATE_ACQUIRED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getVersion();
    }

    @Override
    public Long component3() {
        return getCellarId();
    }

    @Override
    public Long component4() {
        return getDrinkId();
    }

    @Override
    public LocalDate component5() {
        return getBottleDate();
    }

    @Override
    public String component6() {
        return getSize();
    }

    @Override
    public Integer component7() {
        return getQuantity();
    }

    @Override
    public String component8() {
        return getNotes();
    }

    @Override
    public LocalDate component9() {
        return getDrinkByDate();
    }

    @Override
    public LocalDateTime component10() {
        return getCreatedDate();
    }

    @Override
    public LocalDateTime component11() {
        return getModifiedDate();
    }

    @Override
    public String component12() {
        return getBinIdentifier();
    }

    @Override
    public Boolean component13() {
        return getTradeable();
    }

    @Override
    public Short component14() {
        return getNumTradeable();
    }

    @Override
    public LocalDate component15() {
        return getDateAcquired();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getVersion();
    }

    @Override
    public Long value3() {
        return getCellarId();
    }

    @Override
    public Long value4() {
        return getDrinkId();
    }

    @Override
    public LocalDate value5() {
        return getBottleDate();
    }

    @Override
    public String value6() {
        return getSize();
    }

    @Override
    public Integer value7() {
        return getQuantity();
    }

    @Override
    public String value8() {
        return getNotes();
    }

    @Override
    public LocalDate value9() {
        return getDrinkByDate();
    }

    @Override
    public LocalDateTime value10() {
        return getCreatedDate();
    }

    @Override
    public LocalDateTime value11() {
        return getModifiedDate();
    }

    @Override
    public String value12() {
        return getBinIdentifier();
    }

    @Override
    public Boolean value13() {
        return getTradeable();
    }

    @Override
    public Short value14() {
        return getNumTradeable();
    }

    @Override
    public LocalDate value15() {
        return getDateAcquired();
    }

    @Override
    public CellaredDrinkRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public CellaredDrinkRecord value2(Integer value) {
        setVersion(value);
        return this;
    }

    @Override
    public CellaredDrinkRecord value3(Long value) {
        setCellarId(value);
        return this;
    }

    @Override
    public CellaredDrinkRecord value4(Long value) {
        setDrinkId(value);
        return this;
    }

    @Override
    public CellaredDrinkRecord value5(LocalDate value) {
        setBottleDate(value);
        return this;
    }

    @Override
    public CellaredDrinkRecord value6(String value) {
        setSize(value);
        return this;
    }

    @Override
    public CellaredDrinkRecord value7(Integer value) {
        setQuantity(value);
        return this;
    }

    @Override
    public CellaredDrinkRecord value8(String value) {
        setNotes(value);
        return this;
    }

    @Override
    public CellaredDrinkRecord value9(LocalDate value) {
        setDrinkByDate(value);
        return this;
    }

    @Override
    public CellaredDrinkRecord value10(LocalDateTime value) {
        setCreatedDate(value);
        return this;
    }

    @Override
    public CellaredDrinkRecord value11(LocalDateTime value) {
        setModifiedDate(value);
        return this;
    }

    @Override
    public CellaredDrinkRecord value12(String value) {
        setBinIdentifier(value);
        return this;
    }

    @Override
    public CellaredDrinkRecord value13(Boolean value) {
        setTradeable(value);
        return this;
    }

    @Override
    public CellaredDrinkRecord value14(Short value) {
        setNumTradeable(value);
        return this;
    }

    @Override
    public CellaredDrinkRecord value15(LocalDate value) {
        setDateAcquired(value);
        return this;
    }

    @Override
    public CellaredDrinkRecord values(Long value1, Integer value2, Long value3, Long value4, LocalDate value5, String value6, Integer value7, String value8, LocalDate value9, LocalDateTime value10, LocalDateTime value11, String value12, Boolean value13, Short value14, LocalDate value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CellaredDrinkRecord
     */
    public CellaredDrinkRecord() {
        super(CellaredDrink.CELLARED_DRINK);
    }

    /**
     * Create a detached, initialised CellaredDrinkRecord
     */
    public CellaredDrinkRecord(Long id, Integer version, Long cellarId, Long drinkId, LocalDate bottleDate, String size, Integer quantity, String notes, LocalDate drinkByDate, LocalDateTime createdDate, LocalDateTime modifiedDate, String binIdentifier, Boolean tradeable, Short numTradeable, LocalDate dateAcquired) {
        super(CellaredDrink.CELLARED_DRINK);

        set(0, id);
        set(1, version);
        set(2, cellarId);
        set(3, drinkId);
        set(4, bottleDate);
        set(5, size);
        set(6, quantity);
        set(7, notes);
        set(8, drinkByDate);
        set(9, createdDate);
        set(10, modifiedDate);
        set(11, binIdentifier);
        set(12, tradeable);
        set(13, numTradeable);
        set(14, dateAcquired);
    }
}
