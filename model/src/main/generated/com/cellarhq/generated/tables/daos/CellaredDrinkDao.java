/*
 * This file is generated by jOOQ.
 */
package com.cellarhq.generated.tables.daos;


import com.cellarhq.generated.tables.CellaredDrink;
import com.cellarhq.generated.tables.records.CellaredDrinkRecord;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CellaredDrinkDao extends DAOImpl<CellaredDrinkRecord, com.cellarhq.generated.tables.pojos.CellaredDrink, Long> {

    /**
     * Create a new CellaredDrinkDao without any configuration
     */
    public CellaredDrinkDao() {
        super(CellaredDrink.CELLARED_DRINK, com.cellarhq.generated.tables.pojos.CellaredDrink.class);
    }

    /**
     * Create a new CellaredDrinkDao with an attached configuration
     */
    public CellaredDrinkDao(Configuration configuration) {
        super(CellaredDrink.CELLARED_DRINK, com.cellarhq.generated.tables.pojos.CellaredDrink.class, configuration);
    }

    @Override
    public Long getId(com.cellarhq.generated.tables.pojos.CellaredDrink object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(CellaredDrink.CELLARED_DRINK.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchById(Long... values) {
        return fetch(CellaredDrink.CELLARED_DRINK.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.cellarhq.generated.tables.pojos.CellaredDrink fetchOneById(Long value) {
        return fetchOne(CellaredDrink.CELLARED_DRINK.ID, value);
    }

    /**
     * Fetch records that have <code>version BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchRangeOfVersion(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(CellaredDrink.CELLARED_DRINK.VERSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>version IN (values)</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchByVersion(Integer... values) {
        return fetch(CellaredDrink.CELLARED_DRINK.VERSION, values);
    }

    /**
     * Fetch records that have <code>cellar_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchRangeOfCellarId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(CellaredDrink.CELLARED_DRINK.CELLAR_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cellar_id IN (values)</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchByCellarId(Long... values) {
        return fetch(CellaredDrink.CELLARED_DRINK.CELLAR_ID, values);
    }

    /**
     * Fetch records that have <code>drink_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchRangeOfDrinkId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(CellaredDrink.CELLARED_DRINK.DRINK_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>drink_id IN (values)</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchByDrinkId(Long... values) {
        return fetch(CellaredDrink.CELLARED_DRINK.DRINK_ID, values);
    }

    /**
     * Fetch records that have <code>bottle_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchRangeOfBottleDate(Date lowerInclusive, Date upperInclusive) {
        return fetchRange(CellaredDrink.CELLARED_DRINK.BOTTLE_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>bottle_date IN (values)</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchByBottleDate(Date... values) {
        return fetch(CellaredDrink.CELLARED_DRINK.BOTTLE_DATE, values);
    }

    /**
     * Fetch records that have <code>size BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchRangeOfSize(String lowerInclusive, String upperInclusive) {
        return fetchRange(CellaredDrink.CELLARED_DRINK.SIZE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>size IN (values)</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchBySize(String... values) {
        return fetch(CellaredDrink.CELLARED_DRINK.SIZE, values);
    }

    /**
     * Fetch records that have <code>quantity BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchRangeOfQuantity(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(CellaredDrink.CELLARED_DRINK.QUANTITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>quantity IN (values)</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchByQuantity(Integer... values) {
        return fetch(CellaredDrink.CELLARED_DRINK.QUANTITY, values);
    }

    /**
     * Fetch records that have <code>notes BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchRangeOfNotes(String lowerInclusive, String upperInclusive) {
        return fetchRange(CellaredDrink.CELLARED_DRINK.NOTES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>notes IN (values)</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchByNotes(String... values) {
        return fetch(CellaredDrink.CELLARED_DRINK.NOTES, values);
    }

    /**
     * Fetch records that have <code>drink_by_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchRangeOfDrinkByDate(Date lowerInclusive, Date upperInclusive) {
        return fetchRange(CellaredDrink.CELLARED_DRINK.DRINK_BY_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>drink_by_date IN (values)</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchByDrinkByDate(Date... values) {
        return fetch(CellaredDrink.CELLARED_DRINK.DRINK_BY_DATE, values);
    }

    /**
     * Fetch records that have <code>created_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchRangeOfCreatedDate(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(CellaredDrink.CELLARED_DRINK.CREATED_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_date IN (values)</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchByCreatedDate(Timestamp... values) {
        return fetch(CellaredDrink.CELLARED_DRINK.CREATED_DATE, values);
    }

    /**
     * Fetch records that have <code>modified_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchRangeOfModifiedDate(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(CellaredDrink.CELLARED_DRINK.MODIFIED_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modified_date IN (values)</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchByModifiedDate(Timestamp... values) {
        return fetch(CellaredDrink.CELLARED_DRINK.MODIFIED_DATE, values);
    }

    /**
     * Fetch records that have <code>bin_identifier BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchRangeOfBinIdentifier(String lowerInclusive, String upperInclusive) {
        return fetchRange(CellaredDrink.CELLARED_DRINK.BIN_IDENTIFIER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>bin_identifier IN (values)</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchByBinIdentifier(String... values) {
        return fetch(CellaredDrink.CELLARED_DRINK.BIN_IDENTIFIER, values);
    }

    /**
     * Fetch records that have <code>tradeable BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchRangeOfTradeable(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(CellaredDrink.CELLARED_DRINK.TRADEABLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tradeable IN (values)</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchByTradeable(Boolean... values) {
        return fetch(CellaredDrink.CELLARED_DRINK.TRADEABLE, values);
    }

    /**
     * Fetch records that have <code>num_tradeable BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchRangeOfNumTradeable(Short lowerInclusive, Short upperInclusive) {
        return fetchRange(CellaredDrink.CELLARED_DRINK.NUM_TRADEABLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>num_tradeable IN (values)</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchByNumTradeable(Short... values) {
        return fetch(CellaredDrink.CELLARED_DRINK.NUM_TRADEABLE, values);
    }

    /**
     * Fetch records that have <code>date_acquired BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchRangeOfDateAcquired(Date lowerInclusive, Date upperInclusive) {
        return fetchRange(CellaredDrink.CELLARED_DRINK.DATE_ACQUIRED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>date_acquired IN (values)</code>
     */
    public List<com.cellarhq.generated.tables.pojos.CellaredDrink> fetchByDateAcquired(Date... values) {
        return fetch(CellaredDrink.CELLARED_DRINK.DATE_ACQUIRED, values);
    }
}
