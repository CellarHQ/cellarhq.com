/*
 * This file is generated by jOOQ.
 */
package com.cellarhq.generated.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.jooq.JSON;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "category", schema = "public", uniqueConstraints = {
    @UniqueConstraint(name = "pk_category", columnNames = {"id"})
}, indexes = {
    @Index(name = "idx_category_brewery_db_id", columnList = "brewery_db_id ASC"),
    @Index(name = "pk_category", unique = true, columnList = "id ASC")
})
public class Category implements Serializable {

    private static final long serialVersionUID = 1661830531;

    private Long      id;
    private Integer   version;
    private String    name;
    private String    description;
    private Boolean   searchable;
    private String    breweryDbId;
    private Timestamp breweryDbLastUpdated;
    private Timestamp createdDate;
    private Timestamp modifiedDate;
    private JSON      data;

    public Category() {}

    public Category(Category value) {
        this.id = value.id;
        this.version = value.version;
        this.name = value.name;
        this.description = value.description;
        this.searchable = value.searchable;
        this.breweryDbId = value.breweryDbId;
        this.breweryDbLastUpdated = value.breweryDbLastUpdated;
        this.createdDate = value.createdDate;
        this.modifiedDate = value.modifiedDate;
        this.data = value.data;
    }

    public Category(
        Long      id,
        Integer   version,
        String    name,
        String    description,
        Boolean   searchable,
        String    breweryDbId,
        Timestamp breweryDbLastUpdated,
        Timestamp createdDate,
        Timestamp modifiedDate,
        JSON      data
    ) {
        this.id = id;
        this.version = version;
        this.name = name;
        this.description = description;
        this.searchable = searchable;
        this.breweryDbId = breweryDbId;
        this.breweryDbLastUpdated = breweryDbLastUpdated;
        this.createdDate = createdDate;
        this.modifiedDate = modifiedDate;
        this.data = data;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable = false, precision = 64)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Column(name = "version", nullable = false, precision = 32)
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @Column(name = "name", nullable = false, length = 100)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "description")
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Column(name = "searchable", nullable = false)
    public Boolean getSearchable() {
        return this.searchable;
    }

    public void setSearchable(Boolean searchable) {
        this.searchable = searchable;
    }

    @Column(name = "brewery_db_id", length = 64)
    public String getBreweryDbId() {
        return this.breweryDbId;
    }

    public void setBreweryDbId(String breweryDbId) {
        this.breweryDbId = breweryDbId;
    }

    @Column(name = "brewery_db_last_updated")
    public Timestamp getBreweryDbLastUpdated() {
        return this.breweryDbLastUpdated;
    }

    public void setBreweryDbLastUpdated(Timestamp breweryDbLastUpdated) {
        this.breweryDbLastUpdated = breweryDbLastUpdated;
    }

    @Column(name = "created_date", nullable = false)
    public Timestamp getCreatedDate() {
        return this.createdDate;
    }

    public void setCreatedDate(Timestamp createdDate) {
        this.createdDate = createdDate;
    }

    @Column(name = "modified_date", nullable = false)
    public Timestamp getModifiedDate() {
        return this.modifiedDate;
    }

    public void setModifiedDate(Timestamp modifiedDate) {
        this.modifiedDate = modifiedDate;
    }

    @Column(name = "data")
    public JSON getData() {
        return this.data;
    }

    public void setData(JSON data) {
        this.data = data;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Category (");

        sb.append(id);
        sb.append(", ").append(version);
        sb.append(", ").append(name);
        sb.append(", ").append(description);
        sb.append(", ").append(searchable);
        sb.append(", ").append(breweryDbId);
        sb.append(", ").append(breweryDbLastUpdated);
        sb.append(", ").append(createdDate);
        sb.append(", ").append(modifiedDate);
        sb.append(", ").append(data);

        sb.append(")");
        return sb.toString();
    }
}
