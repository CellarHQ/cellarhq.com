/*
 * This file is generated by jOOQ.
 */
package com.cellarhq.generated;


import com.cellarhq.generated.tables.AccountEmail;
import com.cellarhq.generated.tables.AccountLinkRequest;
import com.cellarhq.generated.tables.AccountOauth;
import com.cellarhq.generated.tables.Activity;
import com.cellarhq.generated.tables.Category;
import com.cellarhq.generated.tables.Cellar;
import com.cellarhq.generated.tables.CellaredDrink;
import com.cellarhq.generated.tables.Databasechangeloglock;
import com.cellarhq.generated.tables.Drink;
import com.cellarhq.generated.tables.Glassware;
import com.cellarhq.generated.tables.Organization;
import com.cellarhq.generated.tables.PasswordChangeRequest;
import com.cellarhq.generated.tables.Photo;
import com.cellarhq.generated.tables.Style;
import com.cellarhq.generated.tables.records.AccountEmailRecord;
import com.cellarhq.generated.tables.records.AccountLinkRequestRecord;
import com.cellarhq.generated.tables.records.AccountOauthRecord;
import com.cellarhq.generated.tables.records.ActivityRecord;
import com.cellarhq.generated.tables.records.CategoryRecord;
import com.cellarhq.generated.tables.records.CellarRecord;
import com.cellarhq.generated.tables.records.CellaredDrinkRecord;
import com.cellarhq.generated.tables.records.DatabasechangeloglockRecord;
import com.cellarhq.generated.tables.records.DrinkRecord;
import com.cellarhq.generated.tables.records.GlasswareRecord;
import com.cellarhq.generated.tables.records.OrganizationRecord;
import com.cellarhq.generated.tables.records.PasswordChangeRequestRecord;
import com.cellarhq.generated.tables.records.PhotoRecord;
import com.cellarhq.generated.tables.records.StyleRecord;

import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountEmailRecord> ACCOUNT_EMAIL_PKEY = UniqueKeys0.ACCOUNT_EMAIL_PKEY;
    public static final UniqueKey<AccountEmailRecord> UNQ_ACCOUNT_EMAIL_EMAIL = UniqueKeys0.UNQ_ACCOUNT_EMAIL_EMAIL;
    public static final UniqueKey<AccountLinkRequestRecord> ACCOUNT_LINK_REQUEST_PKEY = UniqueKeys0.ACCOUNT_LINK_REQUEST_PKEY;
    public static final UniqueKey<AccountOauthRecord> ACCOUNT_OAUTH_PKEY = UniqueKeys0.ACCOUNT_OAUTH_PKEY;
    public static final UniqueKey<AccountOauthRecord> ACCOUNT_OAUTH_CLIENT_USERNAME_KEY = UniqueKeys0.ACCOUNT_OAUTH_CLIENT_USERNAME_KEY;
    public static final UniqueKey<ActivityRecord> ACTIVITY_PKEY = UniqueKeys0.ACTIVITY_PKEY;
    public static final UniqueKey<CategoryRecord> CATEGORY_PKEY = UniqueKeys0.CATEGORY_PKEY;
    public static final UniqueKey<CellarRecord> CELLAR_PKEY = UniqueKeys0.CELLAR_PKEY;
    public static final UniqueKey<CellarRecord> UNQ_CELLAR_SCREEN_NAME = UniqueKeys0.UNQ_CELLAR_SCREEN_NAME;
    public static final UniqueKey<CellarRecord> CELLAR_SLUG_UNIQUE_CONSTRAINT = UniqueKeys0.CELLAR_SLUG_UNIQUE_CONSTRAINT;
    public static final UniqueKey<CellaredDrinkRecord> CELLARED_DRINK_PKEY = UniqueKeys0.CELLARED_DRINK_PKEY;
    public static final UniqueKey<DatabasechangeloglockRecord> DATABASECHANGELOGLOCK_PKEY = UniqueKeys0.DATABASECHANGELOGLOCK_PKEY;
    public static final UniqueKey<DrinkRecord> DRINK_PKEY = UniqueKeys0.DRINK_PKEY;
    public static final UniqueKey<GlasswareRecord> GLASSWARE_PKEY = UniqueKeys0.GLASSWARE_PKEY;
    public static final UniqueKey<OrganizationRecord> ORGANIZATION_PKEY = UniqueKeys0.ORGANIZATION_PKEY;
    public static final UniqueKey<OrganizationRecord> UNQ_ORGANIZATION_SLUG = UniqueKeys0.UNQ_ORGANIZATION_SLUG;
    public static final UniqueKey<PasswordChangeRequestRecord> PASSWORD_CHANGE_REQUEST_PKEY = UniqueKeys0.PASSWORD_CHANGE_REQUEST_PKEY;
    public static final UniqueKey<PhotoRecord> PHOTO_PKEY = UniqueKeys0.PHOTO_PKEY;
    public static final UniqueKey<PhotoRecord> UNQ_PHOTO_ORIGINAL_URL = UniqueKeys0.UNQ_PHOTO_ORIGINAL_URL;
    public static final UniqueKey<StyleRecord> STYLE_PKEY = UniqueKeys0.STYLE_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AccountEmailRecord, CellarRecord> ACCOUNT_EMAIL__FK_ACCOUNT_EMAIL_CELLAR_ID = ForeignKeys0.ACCOUNT_EMAIL__FK_ACCOUNT_EMAIL_CELLAR_ID;
    public static final ForeignKey<AccountLinkRequestRecord, CellarRecord> ACCOUNT_LINK_REQUEST__FK_ACCOUNT_LINK_REQUEST_CELLAR_ID = ForeignKeys0.ACCOUNT_LINK_REQUEST__FK_ACCOUNT_LINK_REQUEST_CELLAR_ID;
    public static final ForeignKey<AccountOauthRecord, CellarRecord> ACCOUNT_OAUTH__FK_ACCOUNT_OAUTH_CELLAR_ID = ForeignKeys0.ACCOUNT_OAUTH__FK_ACCOUNT_OAUTH_CELLAR_ID;
    public static final ForeignKey<ActivityRecord, CellarRecord> ACTIVITY__FK_ACTIVITY_CELLAR_ID = ForeignKeys0.ACTIVITY__FK_ACTIVITY_CELLAR_ID;
    public static final ForeignKey<CellarRecord, PhotoRecord> CELLAR__FK_CELLAR_PHOTO_ID = ForeignKeys0.CELLAR__FK_CELLAR_PHOTO_ID;
    public static final ForeignKey<CellaredDrinkRecord, CellarRecord> CELLARED_DRINK__FK_CELLARED_DRINK_CELLAR_ID = ForeignKeys0.CELLARED_DRINK__FK_CELLARED_DRINK_CELLAR_ID;
    public static final ForeignKey<CellaredDrinkRecord, DrinkRecord> CELLARED_DRINK__FK_CELLARED_DRINK_DRINK_ID = ForeignKeys0.CELLARED_DRINK__FK_CELLARED_DRINK_DRINK_ID;
    public static final ForeignKey<DrinkRecord, PhotoRecord> DRINK__FK_DRINK_PHOTO_ID = ForeignKeys0.DRINK__FK_DRINK_PHOTO_ID;
    public static final ForeignKey<DrinkRecord, OrganizationRecord> DRINK__FK_DRINK_ORGANIZATION_ID = ForeignKeys0.DRINK__FK_DRINK_ORGANIZATION_ID;
    public static final ForeignKey<DrinkRecord, StyleRecord> DRINK__FK_DRINK_STYLE_ID = ForeignKeys0.DRINK__FK_DRINK_STYLE_ID;
    public static final ForeignKey<DrinkRecord, GlasswareRecord> DRINK__FK_DRINK_GLASSWARE_ID = ForeignKeys0.DRINK__FK_DRINK_GLASSWARE_ID;
    public static final ForeignKey<OrganizationRecord, PhotoRecord> ORGANIZATION__FK_ORGANIZATION_PHOTO_ID = ForeignKeys0.ORGANIZATION__FK_ORGANIZATION_PHOTO_ID;
    public static final ForeignKey<PasswordChangeRequestRecord, AccountEmailRecord> PASSWORD_CHANGE_REQUEST__FK_PASSWORD_CHANGE_REQUEST_ACCOUNT_EMAIL_ID = ForeignKeys0.PASSWORD_CHANGE_REQUEST__FK_PASSWORD_CHANGE_REQUEST_ACCOUNT_EMAIL_ID;
    public static final ForeignKey<StyleRecord, CategoryRecord> STYLE__FK_STYLE_CATEGORY_ID = ForeignKeys0.STYLE__FK_STYLE_CATEGORY_ID;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<AccountEmailRecord> ACCOUNT_EMAIL_PKEY = Internal.createUniqueKey(AccountEmail.ACCOUNT_EMAIL, "account_email_pkey", AccountEmail.ACCOUNT_EMAIL.ID);
        public static final UniqueKey<AccountEmailRecord> UNQ_ACCOUNT_EMAIL_EMAIL = Internal.createUniqueKey(AccountEmail.ACCOUNT_EMAIL, "unq_account_email_email", AccountEmail.ACCOUNT_EMAIL.EMAIL);
        public static final UniqueKey<AccountLinkRequestRecord> ACCOUNT_LINK_REQUEST_PKEY = Internal.createUniqueKey(AccountLinkRequest.ACCOUNT_LINK_REQUEST, "account_link_request_pkey", AccountLinkRequest.ACCOUNT_LINK_REQUEST.ID);
        public static final UniqueKey<AccountOauthRecord> ACCOUNT_OAUTH_PKEY = Internal.createUniqueKey(AccountOauth.ACCOUNT_OAUTH, "account_oauth_pkey", AccountOauth.ACCOUNT_OAUTH.ID);
        public static final UniqueKey<AccountOauthRecord> ACCOUNT_OAUTH_CLIENT_USERNAME_KEY = Internal.createUniqueKey(AccountOauth.ACCOUNT_OAUTH, "account_oauth_client_username_key", AccountOauth.ACCOUNT_OAUTH.CLIENT, AccountOauth.ACCOUNT_OAUTH.USERNAME);
        public static final UniqueKey<ActivityRecord> ACTIVITY_PKEY = Internal.createUniqueKey(Activity.ACTIVITY, "activity_pkey", Activity.ACTIVITY.ID);
        public static final UniqueKey<CategoryRecord> CATEGORY_PKEY = Internal.createUniqueKey(Category.CATEGORY, "category_pkey", Category.CATEGORY.ID);
        public static final UniqueKey<CellarRecord> CELLAR_PKEY = Internal.createUniqueKey(Cellar.CELLAR, "cellar_pkey", Cellar.CELLAR.ID);
        public static final UniqueKey<CellarRecord> UNQ_CELLAR_SCREEN_NAME = Internal.createUniqueKey(Cellar.CELLAR, "unq_cellar_screen_name", Cellar.CELLAR.SCREEN_NAME);
        public static final UniqueKey<CellarRecord> CELLAR_SLUG_UNIQUE_CONSTRAINT = Internal.createUniqueKey(Cellar.CELLAR, "cellar_slug_unique_constraint", Cellar.CELLAR.SLUG);
        public static final UniqueKey<CellaredDrinkRecord> CELLARED_DRINK_PKEY = Internal.createUniqueKey(CellaredDrink.CELLARED_DRINK, "cellared_drink_pkey", CellaredDrink.CELLARED_DRINK.ID);
        public static final UniqueKey<DatabasechangeloglockRecord> DATABASECHANGELOGLOCK_PKEY = Internal.createUniqueKey(Databasechangeloglock.DATABASECHANGELOGLOCK, "databasechangeloglock_pkey", Databasechangeloglock.DATABASECHANGELOGLOCK.ID);
        public static final UniqueKey<DrinkRecord> DRINK_PKEY = Internal.createUniqueKey(Drink.DRINK, "drink_pkey", Drink.DRINK.ID);
        public static final UniqueKey<GlasswareRecord> GLASSWARE_PKEY = Internal.createUniqueKey(Glassware.GLASSWARE, "glassware_pkey", Glassware.GLASSWARE.ID);
        public static final UniqueKey<OrganizationRecord> ORGANIZATION_PKEY = Internal.createUniqueKey(Organization.ORGANIZATION, "organization_pkey", Organization.ORGANIZATION.ID);
        public static final UniqueKey<OrganizationRecord> UNQ_ORGANIZATION_SLUG = Internal.createUniqueKey(Organization.ORGANIZATION, "unq_organization_slug", Organization.ORGANIZATION.SLUG);
        public static final UniqueKey<PasswordChangeRequestRecord> PASSWORD_CHANGE_REQUEST_PKEY = Internal.createUniqueKey(PasswordChangeRequest.PASSWORD_CHANGE_REQUEST, "password_change_request_pkey", PasswordChangeRequest.PASSWORD_CHANGE_REQUEST.ID);
        public static final UniqueKey<PhotoRecord> PHOTO_PKEY = Internal.createUniqueKey(Photo.PHOTO, "photo_pkey", Photo.PHOTO.ID);
        public static final UniqueKey<PhotoRecord> UNQ_PHOTO_ORIGINAL_URL = Internal.createUniqueKey(Photo.PHOTO, "unq_photo_original_url", Photo.PHOTO.ORIGINAL_URL);
        public static final UniqueKey<StyleRecord> STYLE_PKEY = Internal.createUniqueKey(Style.STYLE, "style_pkey", Style.STYLE.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AccountEmailRecord, CellarRecord> ACCOUNT_EMAIL__FK_ACCOUNT_EMAIL_CELLAR_ID = Internal.createForeignKey(com.cellarhq.generated.Keys.CELLAR_PKEY, AccountEmail.ACCOUNT_EMAIL, "account_email__fk_account_email_cellar_id", AccountEmail.ACCOUNT_EMAIL.CELLAR_ID);
        public static final ForeignKey<AccountLinkRequestRecord, CellarRecord> ACCOUNT_LINK_REQUEST__FK_ACCOUNT_LINK_REQUEST_CELLAR_ID = Internal.createForeignKey(com.cellarhq.generated.Keys.CELLAR_PKEY, AccountLinkRequest.ACCOUNT_LINK_REQUEST, "account_link_request__fk_account_link_request_cellar_id", AccountLinkRequest.ACCOUNT_LINK_REQUEST.CELLAR_ID);
        public static final ForeignKey<AccountOauthRecord, CellarRecord> ACCOUNT_OAUTH__FK_ACCOUNT_OAUTH_CELLAR_ID = Internal.createForeignKey(com.cellarhq.generated.Keys.CELLAR_PKEY, AccountOauth.ACCOUNT_OAUTH, "account_oauth__fk_account_oauth_cellar_id", AccountOauth.ACCOUNT_OAUTH.CELLAR_ID);
        public static final ForeignKey<ActivityRecord, CellarRecord> ACTIVITY__FK_ACTIVITY_CELLAR_ID = Internal.createForeignKey(com.cellarhq.generated.Keys.CELLAR_PKEY, Activity.ACTIVITY, "activity__fk_activity_cellar_id", Activity.ACTIVITY.CELLAR_ID);
        public static final ForeignKey<CellarRecord, PhotoRecord> CELLAR__FK_CELLAR_PHOTO_ID = Internal.createForeignKey(com.cellarhq.generated.Keys.PHOTO_PKEY, Cellar.CELLAR, "cellar__fk_cellar_photo_id", Cellar.CELLAR.PHOTO_ID);
        public static final ForeignKey<CellaredDrinkRecord, CellarRecord> CELLARED_DRINK__FK_CELLARED_DRINK_CELLAR_ID = Internal.createForeignKey(com.cellarhq.generated.Keys.CELLAR_PKEY, CellaredDrink.CELLARED_DRINK, "cellared_drink__fk_cellared_drink_cellar_id", CellaredDrink.CELLARED_DRINK.CELLAR_ID);
        public static final ForeignKey<CellaredDrinkRecord, DrinkRecord> CELLARED_DRINK__FK_CELLARED_DRINK_DRINK_ID = Internal.createForeignKey(com.cellarhq.generated.Keys.DRINK_PKEY, CellaredDrink.CELLARED_DRINK, "cellared_drink__fk_cellared_drink_drink_id", CellaredDrink.CELLARED_DRINK.DRINK_ID);
        public static final ForeignKey<DrinkRecord, PhotoRecord> DRINK__FK_DRINK_PHOTO_ID = Internal.createForeignKey(com.cellarhq.generated.Keys.PHOTO_PKEY, Drink.DRINK, "drink__fk_drink_photo_id", Drink.DRINK.PHOTO_ID);
        public static final ForeignKey<DrinkRecord, OrganizationRecord> DRINK__FK_DRINK_ORGANIZATION_ID = Internal.createForeignKey(com.cellarhq.generated.Keys.ORGANIZATION_PKEY, Drink.DRINK, "drink__fk_drink_organization_id", Drink.DRINK.ORGANIZATION_ID);
        public static final ForeignKey<DrinkRecord, StyleRecord> DRINK__FK_DRINK_STYLE_ID = Internal.createForeignKey(com.cellarhq.generated.Keys.STYLE_PKEY, Drink.DRINK, "drink__fk_drink_style_id", Drink.DRINK.STYLE_ID);
        public static final ForeignKey<DrinkRecord, GlasswareRecord> DRINK__FK_DRINK_GLASSWARE_ID = Internal.createForeignKey(com.cellarhq.generated.Keys.GLASSWARE_PKEY, Drink.DRINK, "drink__fk_drink_glassware_id", Drink.DRINK.GLASSWARE_ID);
        public static final ForeignKey<OrganizationRecord, PhotoRecord> ORGANIZATION__FK_ORGANIZATION_PHOTO_ID = Internal.createForeignKey(com.cellarhq.generated.Keys.PHOTO_PKEY, Organization.ORGANIZATION, "organization__fk_organization_photo_id", Organization.ORGANIZATION.PHOTO_ID);
        public static final ForeignKey<PasswordChangeRequestRecord, AccountEmailRecord> PASSWORD_CHANGE_REQUEST__FK_PASSWORD_CHANGE_REQUEST_ACCOUNT_EMAIL_ID = Internal.createForeignKey(com.cellarhq.generated.Keys.ACCOUNT_EMAIL_PKEY, PasswordChangeRequest.PASSWORD_CHANGE_REQUEST, "password_change_request__fk_password_change_request_account_email_id", PasswordChangeRequest.PASSWORD_CHANGE_REQUEST.ACCOUNT_EMAIL_ID);
        public static final ForeignKey<StyleRecord, CategoryRecord> STYLE__FK_STYLE_CATEGORY_ID = Internal.createForeignKey(com.cellarhq.generated.Keys.CATEGORY_PKEY, Style.STYLE, "style__fk_style_category_id", Style.STYLE.CATEGORY_ID);
    }
}
