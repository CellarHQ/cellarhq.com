/*
 * This file is generated by jOOQ.
 */
package com.cellarhq.generated;


import com.cellarhq.generated.tables.AccountEmail;
import com.cellarhq.generated.tables.AccountLinkRequest;
import com.cellarhq.generated.tables.AccountOauth;
import com.cellarhq.generated.tables.Activity;
import com.cellarhq.generated.tables.Category;
import com.cellarhq.generated.tables.Cellar;
import com.cellarhq.generated.tables.CellaredDrink;
import com.cellarhq.generated.tables.Databasechangeloglock;
import com.cellarhq.generated.tables.Drink;
import com.cellarhq.generated.tables.Glassware;
import com.cellarhq.generated.tables.Organization;
import com.cellarhq.generated.tables.PasswordChangeRequest;
import com.cellarhq.generated.tables.Photo;
import com.cellarhq.generated.tables.Style;

import javax.annotation.Generated;

import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.Internal;


/**
 * A class modelling indexes of tables of the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index IDX_ACCOUNT_EMAIL_EMAIL = Indexes0.IDX_ACCOUNT_EMAIL_EMAIL;
    public static final Index PK_ACCOUNT_EMAIL = Indexes0.PK_ACCOUNT_EMAIL;
    public static final Index UNQ_ACCOUNT_EMAIL_EMAIL = Indexes0.UNQ_ACCOUNT_EMAIL_EMAIL;
    public static final Index PK_ACCOUNT_LINK_REQUEST = Indexes0.PK_ACCOUNT_LINK_REQUEST;
    public static final Index ACCOUNT_OAUTH_CLIENT_USERNAME_KEY = Indexes0.ACCOUNT_OAUTH_CLIENT_USERNAME_KEY;
    public static final Index PK_ACCOUNT_OAUTH = Indexes0.PK_ACCOUNT_OAUTH;
    public static final Index PK_ACTIVITY = Indexes0.PK_ACTIVITY;
    public static final Index IDX_CATEGORY_BREWERY_DB_ID = Indexes0.IDX_CATEGORY_BREWERY_DB_ID;
    public static final Index PK_CATEGORY = Indexes0.PK_CATEGORY;
    public static final Index CELLAR_SLUG_UNIQUE_CONSTRAINT = Indexes0.CELLAR_SLUG_UNIQUE_CONSTRAINT;
    public static final Index PK_CELLAR = Indexes0.PK_CELLAR;
    public static final Index UNQ_CELLAR_SCREEN_NAME = Indexes0.UNQ_CELLAR_SCREEN_NAME;
    public static final Index IDX_CELLARED_DRINK_DRINK_BY_DATE = Indexes0.IDX_CELLARED_DRINK_DRINK_BY_DATE;
    public static final Index PK_CELLARED_DRINK = Indexes0.PK_CELLARED_DRINK;
    public static final Index PK_DATABASECHANGELOGLOCK = Indexes0.PK_DATABASECHANGELOGLOCK;
    public static final Index IDX_DRINK_BREWERY_DB_ID = Indexes0.IDX_DRINK_BREWERY_DB_ID;
    public static final Index IDX_DRINK_NEEDS_MODERATION = Indexes0.IDX_DRINK_NEEDS_MODERATION;
    public static final Index PK_DRINK = Indexes0.PK_DRINK;
    public static final Index IDX_GLASSWARE_BREWERY_DB_ID = Indexes0.IDX_GLASSWARE_BREWERY_DB_ID;
    public static final Index PK_GLASSWARE = Indexes0.PK_GLASSWARE;
    public static final Index PK_ORGANIZATION = Indexes0.PK_ORGANIZATION;
    public static final Index UNQ_ORGANIZATION_SLUG = Indexes0.UNQ_ORGANIZATION_SLUG;
    public static final Index PK_PASSWORD_CHANGE_REQUEST = Indexes0.PK_PASSWORD_CHANGE_REQUEST;
    public static final Index PK_PHOTO = Indexes0.PK_PHOTO;
    public static final Index UNQ_PHOTO_ORIGINAL_URL = Indexes0.UNQ_PHOTO_ORIGINAL_URL;
    public static final Index IDX_STYLE_BREWERY_DB_ID = Indexes0.IDX_STYLE_BREWERY_DB_ID;
    public static final Index PK_STYLE = Indexes0.PK_STYLE;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index IDX_ACCOUNT_EMAIL_EMAIL = Internal.createIndex("idx_account_email_email", AccountEmail.ACCOUNT_EMAIL, new OrderField[] { AccountEmail.ACCOUNT_EMAIL.EMAIL }, false);
        public static Index PK_ACCOUNT_EMAIL = Internal.createIndex("pk_account_email", AccountEmail.ACCOUNT_EMAIL, new OrderField[] { AccountEmail.ACCOUNT_EMAIL.ID }, true);
        public static Index UNQ_ACCOUNT_EMAIL_EMAIL = Internal.createIndex("unq_account_email_email", AccountEmail.ACCOUNT_EMAIL, new OrderField[] { AccountEmail.ACCOUNT_EMAIL.EMAIL }, true);
        public static Index PK_ACCOUNT_LINK_REQUEST = Internal.createIndex("pk_account_link_request", AccountLinkRequest.ACCOUNT_LINK_REQUEST, new OrderField[] { AccountLinkRequest.ACCOUNT_LINK_REQUEST.ID }, true);
        public static Index ACCOUNT_OAUTH_CLIENT_USERNAME_KEY = Internal.createIndex("account_oauth_client_username_key", AccountOauth.ACCOUNT_OAUTH, new OrderField[] { AccountOauth.ACCOUNT_OAUTH.CLIENT, AccountOauth.ACCOUNT_OAUTH.USERNAME }, true);
        public static Index PK_ACCOUNT_OAUTH = Internal.createIndex("pk_account_oauth", AccountOauth.ACCOUNT_OAUTH, new OrderField[] { AccountOauth.ACCOUNT_OAUTH.ID }, true);
        public static Index PK_ACTIVITY = Internal.createIndex("pk_activity", Activity.ACTIVITY, new OrderField[] { Activity.ACTIVITY.ID }, true);
        public static Index IDX_CATEGORY_BREWERY_DB_ID = Internal.createIndex("idx_category_brewery_db_id", Category.CATEGORY, new OrderField[] { Category.CATEGORY.BREWERY_DB_ID }, false);
        public static Index PK_CATEGORY = Internal.createIndex("pk_category", Category.CATEGORY, new OrderField[] { Category.CATEGORY.ID }, true);
        public static Index CELLAR_SLUG_UNIQUE_CONSTRAINT = Internal.createIndex("cellar_slug_unique_constraint", Cellar.CELLAR, new OrderField[] { Cellar.CELLAR.SLUG }, true);
        public static Index PK_CELLAR = Internal.createIndex("pk_cellar", Cellar.CELLAR, new OrderField[] { Cellar.CELLAR.ID }, true);
        public static Index UNQ_CELLAR_SCREEN_NAME = Internal.createIndex("unq_cellar_screen_name", Cellar.CELLAR, new OrderField[] { Cellar.CELLAR.SCREEN_NAME }, true);
        public static Index IDX_CELLARED_DRINK_DRINK_BY_DATE = Internal.createIndex("idx_cellared_drink_drink_by_date", CellaredDrink.CELLARED_DRINK, new OrderField[] { CellaredDrink.CELLARED_DRINK.DRINK_BY_DATE }, false);
        public static Index PK_CELLARED_DRINK = Internal.createIndex("pk_cellared_drink", CellaredDrink.CELLARED_DRINK, new OrderField[] { CellaredDrink.CELLARED_DRINK.ID }, true);
        public static Index PK_DATABASECHANGELOGLOCK = Internal.createIndex("pk_databasechangeloglock", Databasechangeloglock.DATABASECHANGELOGLOCK, new OrderField[] { Databasechangeloglock.DATABASECHANGELOGLOCK.ID }, true);
        public static Index IDX_DRINK_BREWERY_DB_ID = Internal.createIndex("idx_drink_brewery_db_id", Drink.DRINK, new OrderField[] { Drink.DRINK.BREWERY_DB_ID }, false);
        public static Index IDX_DRINK_NEEDS_MODERATION = Internal.createIndex("idx_drink_needs_moderation", Drink.DRINK, new OrderField[] { Drink.DRINK.NEEDS_MODERATION }, false);
        public static Index PK_DRINK = Internal.createIndex("pk_drink", Drink.DRINK, new OrderField[] { Drink.DRINK.ID }, true);
        public static Index IDX_GLASSWARE_BREWERY_DB_ID = Internal.createIndex("idx_glassware_brewery_db_id", Glassware.GLASSWARE, new OrderField[] { Glassware.GLASSWARE.BREWERY_DB_ID }, false);
        public static Index PK_GLASSWARE = Internal.createIndex("pk_glassware", Glassware.GLASSWARE, new OrderField[] { Glassware.GLASSWARE.ID }, true);
        public static Index PK_ORGANIZATION = Internal.createIndex("pk_organization", Organization.ORGANIZATION, new OrderField[] { Organization.ORGANIZATION.ID }, true);
        public static Index UNQ_ORGANIZATION_SLUG = Internal.createIndex("unq_organization_slug", Organization.ORGANIZATION, new OrderField[] { Organization.ORGANIZATION.SLUG }, true);
        public static Index PK_PASSWORD_CHANGE_REQUEST = Internal.createIndex("pk_password_change_request", PasswordChangeRequest.PASSWORD_CHANGE_REQUEST, new OrderField[] { PasswordChangeRequest.PASSWORD_CHANGE_REQUEST.ID }, true);
        public static Index PK_PHOTO = Internal.createIndex("pk_photo", Photo.PHOTO, new OrderField[] { Photo.PHOTO.ID }, true);
        public static Index UNQ_PHOTO_ORIGINAL_URL = Internal.createIndex("unq_photo_original_url", Photo.PHOTO, new OrderField[] { Photo.PHOTO.ORIGINAL_URL }, true);
        public static Index IDX_STYLE_BREWERY_DB_ID = Internal.createIndex("idx_style_brewery_db_id", Style.STYLE, new OrderField[] { Style.STYLE.BREWERY_DB_ID }, false);
        public static Index PK_STYLE = Internal.createIndex("pk_style", Style.STYLE, new OrderField[] { Style.STYLE.ID }, true);
    }
}
